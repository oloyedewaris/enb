!function(g){function I(A){if(C[A])return C[A].exports;var n=C[A]={i:A,l:!1,exports:{}};return g[A].call(n.exports,n,n.exports,I),n.l=!0,n.exports}var C={};return I.m=g,I.c=C,I.i=function(g){return g},I.d=function(g,I,C){Object.defineProperty(g,I,{configurable:!1,enumerable:!0,get:C})},I.n=function(g){var C=g&&g.__esModule?function(){return g["default"]}:function(){return g};return I.d(C,"a",C),C},I.o=function(g,I){return Object.prototype.hasOwnProperty.call(g,I)},I.p="",I(I.s=8)}([function(module,exports){eval("myCommunityBank.factory('baseApiFactory', ['$http', '$sce','$location', function($http, $sce, $location) {\n    var self = this;\n\n    self.lastPayload = null;\n    self.environment = angular.element('html').data('env');\n\n    self.apiKey = '8ab7c59b5843653401584365625a0000';\n\n    self.culoans = {\n        url: null,\n        sandbox: 'https://applicationculoans-uat.culoans.co.uk/cuplatform/',\n        production: 'https://applicationculoans.culoans.co.uk/',\n        headers: {\n            'X-API-KEY': self.apiKey,\n            'X-Auth-Token': null\n        }\n    };\n\n    self.culoansFiles = {\n        url: null,\n        sandbox: 'https://applicationculoans-uat.culoans.co.uk/cuplatform/',\n        production: 'https://file-applicationculoans.culoans.co.uk/cuplatformfiles/',\n        headers: {\n            'X-API-KEY': self.apiKey,\n            'X-Auth-Token': null\n        }\n    };\n\n    self.ihub = {\n        url: null,\n        sandbox: 'https://applicationculoans-uat.culoans.co.uk/cuplatform/loanapplications/',\n        production: 'https://mycommunitybankapp.culoans.co.uk/ihub/',\n        headers : {},\n        endpoints: ['address'],\n        headers: {\n            'X-API-KEY': self.apiKey,\n            'X-Auth-Token': null\n        }\n    };\n\n    var weburl = $location.absUrl();\n    \n\n    if(weburl.split('aggr_cd=') && weburl.split('aggr_cd=')[1] && weburl.split('aggr_cd=')[1].split(\"&\")){\n        self.aggrCode = weburl.split('aggr_cd=')[1].split(\"&\")[0];\n    } else {\n        self.aggrCode = \"MYCB\";\n    }\n    \n    if(weburl.split('brandid=') && weburl.split('brandid=')[1] && weburl.split('brandid=')[1].split(\"&\")){\n        self.brandid = weburl.split('brandid=')[1].split(\"&\")[0];\n    }\n    \n\n    self.aggrUrl = window.location.href;\n\n    self.disableSandbox = function () {\n        self.culoans.url = self.culoans.production;\n        self.culoansFiles.url = self.culoansFiles.production;\n        self.ihub.url = self.ihub.production;\n    };\n\n    self.enableSandbox = function () {\n        self.culoans.url = self.culoans.sandbox;\n        self.culoansFiles.url = self.culoansFiles.sandbox;\n        self.ihub.url = self.ihub.sandbox;\n    };\n\n    self.getApiRequestUrl = function (endpoint) {\n        var url = self.culoans.url + endpoint;\n\n        if (self.ihub.endpoints.indexOf(endpoint) > -1) {\n            url = self.ihub.url + endpoint;\n        }\n\n        return $sce.trustAsResourceUrl(url);\n    };\n\n    self.getApiRequestUrlFiles = function (endpoint) {\n        var url = self.culoansFiles.url + endpoint;\n\n        if (self.ihub.endpoints.indexOf(endpoint) > -1) {\n            url = self.ihub.url + endpoint;\n        }\n\n        return $sce.trustAsResourceUrl(url);\n    };\n\n    self.getApiRequestHeaders = function (endpoint) {\n        return self.ihub.endpoints.indexOf(endpoint) == -1 ? self.culoans.headers : self.ihub.headers;\n    };\n\n    self.getSafeEsignUrl = function (url) {\n        return $sce.trustAsResourceUrl(url);\n    };\n\n    self.formatPostCodeResponse = function (data) {\n\n        var address = {\n            generic: {\n                city: data.address.town,\n                county: data.address.county,\n                street: data.address.address1,\n                postcode: data.address.postcode\n            },\n            suggestions: []\n        };\n\n        var suggestions = data.possibleMatches;\n        _.each(suggestions, function (line) {\n            address.suggestions.push(((line.organisation) + \" \" + (line.flatNumber) + \" \" + (line.buildingName) + \" \" + (line.buildingNumber)));\n        });\n\n        return address;\n    };\n\n    self.lookupPostcode = function (postcode, success, fail) {\n        return self.getApi('loanapplications/address', {\n            postcode: postcode.replace(/ /g,'')\n        }, function (data) {\n            if (data && data.errorNumber != 3) {\n                if (success) {\n                    var formatted = self.formatPostCodeResponse(data);\n                    return success(formatted);\n                }\n            } else {\n                if (fail) {\n                    if (data && data.errorMessage) {\n                        var msg = data.errorMessage.replace('error ', '');\n                        return fail(msg);\n                    } else {\n                        console.error('API provided no data');\n                        return fail('Postcode not found (e)');\n                    }\n                }\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n    self.getPurposes = function (success, fail) {\n        return self.getApi('masterdata', {\n            queryType: 'purpose'\n        }, function (data) {\n            if (success) {\n                return success(data);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n\n    self.getEmpstatuss = function (success, fail) {\n        return self.getApi('masterdata', {\n            queryType: 'empstatus'\n        }, function (data) {\n            if (success) {\n                return success(data);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n\n    self.getCreditratings = function (success, fail) {\n        return self.getApi('masterdata', {\n            queryType: 'creditrating'\n        }, function (data) {\n            if (success) {\n                return success(data);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n    self.getSalutations = function (success, fail) {\n        return self.getApi('masterdata', {\n            queryType: 'title'\n        }, function (data) {\n            if (success) {\n                return success(data);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n    self.getNationalities = function (success, fail) {\n        return self.getApi('masterdata', {\n            queryType: 'nationality'\n        }, function (data) {\n            if (success) {\n                return success(data);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n    self.getSecurityQuestions = function (success, fail) {\n        return self.getApi('masterdata', {\n            queryType: 'security'\n        }, function (data) {\n            if (success) {\n                return success(data);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n    self.syncMeta = function (metas, config) {\n        if (config.purposes) {\n            self.getPurposes(function (data) {\n                metas.purposes = data.purpose.masterData;\n            });\n        }\n\n        if (config.empstatuss) {\n            self.getEmpstatuss(function (data) {\n                metas.empstatuss = data.empstatus.masterData;\n            });\n        }\n\n        if (config.creditratings) {\n            self.getCreditratings(function (data) {\n                metas.creditratings = data.creditrating.masterData;\n            });\n        }\n\n        if (config.titles) {\n            self.getSalutations(function (data) {\n                metas.titles = data.title.masterData;\n            });\n        }\n\n        if (config.nationalities) {\n            self.getNationalities(function (data) {\n                metas.nationalities = data.nationality.masterData;\n                angular.element(document).trigger('updated::nationalities');\n            });\n        }\n\n        if (config.security) {\n            self.getSecurityQuestions(function (data) {\n                metas.security_questions = data.security.masterData;\n            });\n        }\n    };\n\n    self.getApi = function (endpoint, query, success, fail) {\n        var url = self.getApiRequestUrl(endpoint);\n        var headers = self.getApiRequestHeaders(endpoint);\n\n        self.lastPayload = {\n            url: url.$$unwrapTrustedValue(),\n            data: query,\n            headers: headers\n        };\n\n        $http.get(url, {\n            params: query,\n            headers: headers\n        }, {\n            timeout: (45 * 1000)\n        })\n        .then(function (response) {\n            if (success) {\n                return success(response.data);\n            }\n        }, function (response) {\n            var message = self.parseErrors(response, 'a');\n            if (fail) {\n                return fail(message);\n            }\n        })\n        .catch(function (err) {\n            var message = self.parseErrors(err, 'b');\n            if (fail) {\n                return fail(message);\n            }\n        });\n    };\n\n\n    self.getApiFiles = function (endpoint, query, success, fail) {\n        var url = self.getApiRequestUrlFiles(endpoint);\n        var headers = self.getApiRequestHeaders(endpoint);\n\n        self.lastPayload = {\n            url: url.$$unwrapTrustedValue(),\n            data: query,\n            headers: headers\n        };\n\n        $http.get(url, {\n            params: query,\n            headers: headers\n        }, {\n            timeout: (45 * 1000)\n        })\n        .then(function (response) {\n            if (success) {\n                return success(response.data);\n            }\n        }, function (response) {\n            var message = self.parseErrors(response, 'a');\n            if (fail) {\n                return fail(message);\n            }\n        })\n        .catch(function (err) {\n            var message = self.parseErrors(err, 'b');\n            if (fail) {\n                return fail(message);\n            }\n        });\n    };\n\n    self.postApi = function (endpoint, data, success, fail) {\n        var url = self.getApiRequestUrl(endpoint);\n        var headers = self.getApiRequestHeaders(endpoint);\n\n        self.lastPayload = {\n            url: url.$$unwrapTrustedValue(),\n            data: data,\n            headers: headers\n        };\n\n        $http.post(url, data, {\n            headers: headers\n        }, {\n            timeout: (45 * 1000)\n        })\n        .then(function (response) {\n            if (success) {\n                return success(response.data);\n            }\n        }, function (response) {\n            var message = self.parseErrors(response, 'c');\n            if (fail) {\n                return fail(message);\n            }\n        })\n        .catch(function (err) {\n            var message = self.parseErrors(err, 'd');\n            if (fail) {\n                return fail(message);\n            }\n        });\n    };\n    \n    self.postApiFiles = function (endpoint, data, success, fail) {       \n\n        var url = self.getApiRequestUrlFiles(endpoint);\n        var headers = self.getApiRequestHeaders(endpoint);\n\n        self.lastPayload = {\n            url: url.$$unwrapTrustedValue(),\n            data: data,\n            headers: headers\n        };\n\n        $http.post(url, data, {\n            headers: headers\n        }, {\n            timeout: (45 * 1000)\n        })\n        .then(function (response) {\n            if (success) {\n                return success(response.data);\n            }\n        }, function (response) {\n            var message = self.parseErrors(response, 'c');\n            if (fail) {\n                return fail(message);\n            }\n        })\n        .catch(function (err) {\n            var message = self.parseErrors(err, 'd');\n            if (fail) {\n                return fail(message);\n            }\n        });\n    };\n\n    \n\n    self.putApi = function (endpoint, data, success, fail) {\n        var url = self.getApiRequestUrl(endpoint);\n        var headers = self.getApiRequestHeaders(endpoint);\n\n        self.lastPayload = {\n            url: url.$$unwrapTrustedValue(),\n            data: data,\n            headers: headers\n        };\n\n        $http.put(url, data, {\n            headers: headers\n        }, {\n            timeout: (45 * 1000)\n        })\n        .then(function (response) {\n            if (success) {\n                return success(response.data);\n            }\n        }, function (response) {\n            var message = self.parseErrors(response, 'e');\n            if (fail) {\n                return fail(message);\n            }\n        })\n        .catch(function (err) {\n            var message = self.parseErrors(err, 'f');\n            if (fail) {\n                return fail(message);\n            }\n        });\n    };\n\n    self.parseErrors = function (_data, tag) {\n\n        var data = null;\n\n        if (_data.data) {\n            data = _data.data;\n        } else {\n            data = _data;\n        }\n\n        self.saveToSentry(data);\n\n        if (data.message) {\n            var errorMessage = data.message;\n            UIkit.modal.alert(errorMessage);\n            return errorMessage;\n        }\n\n        if (angular.isObject(data) && data.platformResponse && Object.keys(data.platformResponse).length) {\n            var firstError = _.first(data.platformResponse);\n            var errorMessage$1 = firstError.description || firstError.responseDesc;\n\n            var errorAlert = \"\\n                <h3>Persistent API Error</h3>\\n                <p>\" + errorMessage$1 + \"</p>\\n            \";\n\n            UIkit.modal.alert(errorAlert);\n            return errorMessage$1;\n        }\n        else if(data.description){\n            return data.description;\n        }\n        return 'Sorry the Persistent API has returned an unexpected response, please try again later or contact us via phone. ' + (tag ? (\" (\" + tag + \")\") : '');\n    };\n\n    self.saveToSentry = function (data) {\n\n        var extras = angular.extend({}, self.lastPayload);\n        extras.response = data;\n\n        if (self.environment != 'development') {\n            Raven.captureException('Persistent API Error', {\n                extra: extras\n            });\n        }\n\n        self.lastPayload = {};\n    }\n\n    if (self.environment === 'production') {\n        self.disableSandbox();\n    } else {\n        self.enableSandbox();\n    }\n\n    return self;\n}]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");
},function(module,exports){eval("myCommunityBank.service('baseApplicationService', ['$window',function ($window) {\n\n    var self = this;\n    var $scope = {};\n\n    angular.element(document).on('updated::nationalities', function () {\n      var underscore = _.noConflict(); \n      if(typeof underscore.findWhere != 'undefined' && typeof underscore.findWhere == 'function'){\n        if (!_.isObject(self.form.personal.passport.nationality)) {\n              self.form.personal.passport.nationality = underscore.findWhere(self.meta.nationalities, {\n                  masterCode: ''\n              });\n          } else {\n              self.form.personal.passport.nationality = underscore.findWhere(self.meta.nationalities, {\n                  masterCode: self.form.personal.passport.nationality.masterCode\n              });\n          }\n       } else {\n         if (!_.isObject(self.form.personal.passport.nationality)) {\n              self.form.personal.passport.nationality = _.findWhere(self.meta.nationalities, {\n                  masterCode: ''\n              });\n          } else {\n              self.form.personal.passport.nationality = _.findWhere(self.meta.nationalities, {\n                  masterCode: self.form.personal.passport.nationality.masterCode\n              });\n          }\n       }\n    });\n\n    self.getNewAddress = function () {\n        return {\n            number: '',\n            street: '',\n            city: '',\n            postcode: '',\n            cant_find: false,\n            cant_find_emp: false,\n            less_than_three_years: false,\n            suggestions: []\n        };\n    }\n\n    self.attachScope = function(_scope) {\n        _scope.meta = self.meta;\n        _scope.form = self.form;\n        _scope.product = self.product;\n        $scope = _scope;\n        return this;\n    };\n\n    self.setId = function (id) {\n        console.error('Implement on child class level');\n    };\n\n    self.getId = function () {\n        console.error('Implement on child class level');\n    };\n\n    self.getCuId = function () {\n        return self.product.cuid;\n    };\n\n    self.setCuId = function (cuid) {\n        self.product.cuid = cuid;\n        return this;\n    };\n\n    self.getState = function () {\n        return self.form.request.state;\n    }\n\n    self.getDOB = function () {\n        var today = new Date();\n        var birthMonth = self.form.personal.dob.month.number -1;\n        var m = today.getMonth() - birthMonth;\n        var d = today.getDate() - self.form.personal.dob.day;\n        var y = today.getFullYear() - self.form.personal.dob.year;\n\n        if (\n            self.form.personal.dob.year &&\n            self.form.personal.dob.month &&\n            self.form.personal.dob.day\n        ) {\n            return ((self.form.personal.dob.day) + \"/\" + (self.form.personal.dob.month.number) + \"/\" + (self.form.personal.dob.year))\n        }\n \n        return null;\n    };\n    \n    \n\n    self.getAnnualIncome = function () {\n        var income = self.form.personal.annual_income || '';\n            income = income + '';            \n            income = income.split(',').join('');\n        return income;\n    };\n\n    self.getAmount = function () {\n        var loanAmount = self.form.request.amount || '';\n            loanAmount = loanAmount + '';            \n            loanAmount = loanAmount.split(',').join('');\n        return loanAmount;\n    };\n\n    self.getPassportExpiry = function () {\n        var parts = self.form.personal.passport.expiry.split('/');\n\n        if (parts.length == 3) {\n            var now = Date.now(),\n                jsFormat = (parts[2]) + \"-\" + (parts[1]) + \"-\" + (parts[0]),\n                dateObj = Date.parse(jsFormat);\n\n            return self.form.personal.passport.expiry;\n\n            // If we need to validate it more\n            if (now < dateObj) {\n                return self.form.personal.passport.expiry;\n            }\n        }\n\n        return '';\n    };\n\n    self.preparePersonalData = function() {\n        var nationality = null;\n        if(typeof self.form.personal.passport.nationality != 'undefined'){\n            nationality = self.form.personal.passport.nationality.masterCode;\n        }\n        var data = {\n            deviceType: 'Home',\n            incomeType: 'Annual',\n            birthDate: self.getDOB(),\n            eMail: self.form.personal.email,\n            confirmEmail: self.form.personal.confirmEmail,\n            title: self.form.personal.title,\n            income: self.getAnnualIncome(),\n            loanAmount: self.getAmount(),            \n            phoneNumber: self.form.personal.phone,\n            homeNumber: self.form.personal.homeNumber,\n            lastName: self.form.personal.last_name,\n            employerName: self.form.personal.employer,\n            relativeinmycb: self.form.personal.relativeinmycb,\n            relativeMembershipId: self.form.personal.relativeMembershipId,\n            association: self.form.personal.association,\n            employerAddress: self.form.personal.employerAddress,\n            employerBuildingName: self.form.personal.employerBuildingName,\n            employerBuildingNumber: self.form.personal.employerBuildingNumber,\n            employerCity: self.form.personal.employerCity,\n            employerStreet: self.form.personal.employerStreet,\n            employerAbodeNumber: self.form.personal.employerAbodeNumber,\n            employerPostcode: self.form.personal.employerPostcode,\n            employmentSector: self.form.personal.employmentSector,\n            employmentPosition: self.form.personal.employmentPosition,\n            firstName: self.form.personal.first_name,\n            passportValidUntil: self.getPassportExpiry(),\n            middleName: self.form.personal.middle_name,\n            passportIdNumber: self.form.personal.passport.number,\n            nationality: nationality,\n            employmentStatus: self.form.personal.employmentStatus,\n            passportIssuingAuthority: self.form.personal.passport.authority,\n            depositAmount: self.form.personal.deposit_amount\n        };\n\n        return data;\n    };\n\n    self.prepareAddresses = function () {\n        if(typeof self.form.addresses[0].number ==  'undefined' || null == self.form.addresses[0].number){\n            return;\n        }\n        var add = self.form.addresses[0].number.split(\",\");\n        var data = {\n            city: self.form.addresses[0].city,\n            street: null != self.form.addresses[0].street ? self.form.addresses[0].street : \"\",\n            postcode: self.form.addresses[0].postcode,\n            buildingNumber: null != add[2] ? add[2] : \"\",\n            abodeNumber: null != add[0] ? add[0] : \"\",\n            buildingName: null != add[1] ? add[1] : \"\"\n        };\n        data.address = (data.abodeNumber) + \" \" + (data.buildingNumber) + \" \" + (data.buildingName) + \", \" + (data.street) + \", \" + (data.city);\n        var additionalAddresses = self.form.addresses.slice(1, self.form.addresses.length);\n\n        _.each(additionalAddresses, function (addr, key) {\n            data[(\"prevAddr\" + (key + 1) + \"City\")] = addr.city;\n            data[(\"prevAddr\" + (key + 1) + \"Street\")] = addr.street;\n            data[(\"prevAddr\" + (key + 1) + \"Postcode\")] = addr.postcode;\n            data[(\"prevAddr\" + (key + 1) + \"AbodeNumber\")] = addr.number;\n            data[(\"prevAddr\" + (key + 1) + \"BuildingNumber\")] = addr.number;\n            data[(\"prevAddr\" + (key + 1))] = (addr.number) + \", \" + (addr.street) + \", \" + (addr.city);\n        });\n        return data;\n    };\n\n    self.prepareBankDetails = function () {\n\n        var data = {\n            bankSortCode: self.form.bank.sortcode || '',\n            bankAccountNumber: self.form.bank.account_number || '',\n            bankAccountType: self.form.bank.current_or_savings,\n            bankAccountUsage: self.form.bank.personal_or_business\n        };\n\n        // Nasty hacks for persistent api as they wont change it\n        data.bankSortCode = data.bankSortCode + '';\n        data.bankAccountNumber = data.bankAccountNumber + '';\n\n        return data;\n    };\n\n    self.prepareSecurityData = function () {\n\n        var data = {\n            securityQuestion: self.form.security.question,\n            securityQuestionAnswer: self.form.security.answer\n        };\n\n        return data;\n    };\n\n    self.prepareTosData = function () {\n        var data = {\n            joinFEA: self.form.tos.join_fea,\n            privacyAgreementAgreed: self.form.tos.privacy,\n            cuEligibility: self.form.tos.cuEligibility ? \"CB:\"+self.form.tos.cuEligibility + \"\" : self.form.tos.cuEligibility,\n            ehPostcode: self.form.tos.ehPostcode,\n            cardiffVale: self.form.tos.cardiffVale\n        };\n\n        return data;\n    };\n\n    self.prepareOddMandatoryFields = function () {\n\n        var data = {\n            amtStep: '',\n            tenureStep: '',\n            commonBondCharity: self.form.personal.commonBondCharity,\n            secondFurtherAddress: self.form.addresses.length > 2,\n            movedWithin3YearsCheckbox: self.form.addresses[0].less_than_three_years\n        };\n\n        return data;\n    };\n\n    window.saveBackup = function () {\n        return;\n        return localStorage.setItem('applicationFormData', JSON.stringify(self.form));\n    };\n\n    window.loadBackup = function () {\n        return;\n        var data = null;\n\n        try {\n            var backup = localStorage.getItem('applicationFormData') || '{}';\n            data = JSON.parse(backup);\n        } catch(exception) {\n            data = null;\n        }\n\n        if (data) {\n            angular.extend(self.form, data);\n        }\n    };\n\n    window.pruneBackup = function () {\n        localStorage.setItem('applicationFormData', '{}');\n    };\n\n    self.cachedYears = null;\n    if($window.innerWidth < 760){\n        self.months = [\n            {\n                name: 'Jan',\n                number: 1,\n                days: 31\n            },\n            {\n                name: 'Feb',\n                number: 2,\n                days: 28\n            },\n            {\n                name: 'Mar',\n                number: 3,\n                days: 31\n            },\n            {\n                name: 'Apr',\n                number: 4,\n                days: 30\n            },\n            {\n                name: 'May',\n                number: 5,\n                days: 31\n            },\n            {\n                name: 'June',\n                number: 6,\n                days: 30\n            },\n            {\n                name: 'July',\n                number: 7,\n                days: 31\n            },\n            {\n                name: 'Aug',\n                number: 8,\n                days: 31\n            },\n            {\n                name: 'Sept',\n                number: 9,\n                days: 30\n            },\n            {\n                name: 'Oct',\n                number: 10,\n                days: 31\n            },\n            {\n                name: 'Nov',\n                number: 11,\n                days: 30\n            },\n            {\n                name: 'Dec',\n                number: 12,\n                days: 31\n            }\n        ]\n    }\n    else{\n       self.months = [\n        {\n            name: 'January',\n            number: 1,\n            days: 31\n        },\n        {\n            name: 'February',\n            number: 2,\n            days: 28\n        },\n        {\n            name: 'March',\n            number: 3,\n            days: 31\n        },\n        {\n            name: 'April',\n            number: 4,\n            days: 30\n        },\n        {\n            name: 'May',\n            number: 5,\n            days: 31\n        },\n        {\n            name: 'June',\n            number: 6,\n            days: 30\n        },\n        {\n            name: 'July',\n            number: 7,\n            days: 31\n        },\n        {\n            name: 'August',\n            number: 8,\n            days: 31\n        },\n        {\n            name: 'September',\n            number: 9,\n            days: 30\n        },\n        {\n            name: 'October',\n            number: 10,\n            days: 31\n        },\n        {\n            name: 'November',\n            number: 11,\n            days: 30\n        },\n        {\n            name: 'December',\n            number: 12,\n            days: 31\n        }\n    ] \n    }\n    self.meta = {\n        titles: [],\n        nationalities: [],\n        bank_types: [],\n        security_questions: [],\n        device_types: [],\n        income_types: [],\n        months: self.months,\n        monthsDays: function (month) {\n            var maxDays = month.days || 31;\n            var days = [];\n\n            for (var i = 1; i <= maxDays; i++) {\n                days.push(i);\n            }\n\n            return days;\n        },\n        years: function () {\n            // We dont want to do this every time!\n            if (self.cachedYears) {\n                return self.cachedYears;\n            } else {\n                self.cachedYears = [];\n            }\n\n            var thisYear = new Date().getFullYear();\n            var maxDate = thisYear - 18;\n            var minDate = thisYear - 100;\n            var dateDiff = maxDate - minDate;\n\n            \n\n            for (var i = 0; i <= dateDiff; i++) {\n                var year = maxDate - i;\n                self.cachedYears.push(year);\n            }\n            return self.cachedYears;\n        }\n        \n    };\n    \n    self.product = {\n        cuid: null,\n        id: null\n    };\n\n    self.form = {\n\n        request: {\n            id: null,\n            state: 'IN_PROGRESS'\n        },\n\n        personal: {\n            title: '',\n            first_name: '',\n            last_name: '',\n            email: '',\n            confirmEmail: '',\n            phone: '',\n            annual_income: '',\n            dob: {\n                day: '',\n                month: '',\n                year: ''\n            },\n            passport: {\n                nationality: '',\n                number: '',\n                authority: '',\n                expiry: ''\n            },\n        },\n\n        verify: {\n            email: '',\n            phone: '',\n            loanId: '',\n            sortCode: '',\n            accountNumber: '',\n            cuEligibility: ''\n        },\n\n        addresses: [\n            self.getNewAddress()\n        ],\n\n        bank: {\n            personal_or_business: 'PERSONAL',\n            current_or_savings: 'CURRENT',\n            sortcode: '',\n            account_number: ''\n        },\n\n        security: {\n            question: '',\n            answer: ''\n        },\n\n        tos: {\n            join_fea: false,\n            privacy: false,\n            cuEligibility: ''\n        }\n    };\n\n    window.loadBackup();\n}]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy90aGVtZS1hc3NldHMvanMvX2FwcGxpY2F0aW9ucy9fYmFzZS1zZXJ2aWNlLmpzPzFlMmEiXSwic291cmNlc0NvbnRlbnQiOlsibXlDb21tdW5pdHlCYW5rLnNlcnZpY2UoJ2Jhc2VBcHBsaWNhdGlvblNlcnZpY2UnLCBbJyR3aW5kb3cnLGZ1bmN0aW9uICgkd2luZG93KSB7XG5cbiAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICBsZXQgJHNjb3BlID0ge307XG5cbiAgICBhbmd1bGFyLmVsZW1lbnQoZG9jdW1lbnQpLm9uKCd1cGRhdGVkOjpuYXRpb25hbGl0aWVzJywgZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHVuZGVyc2NvcmUgPSBfLm5vQ29uZmxpY3QoKTsgXG4gICAgICBpZih0eXBlb2YgdW5kZXJzY29yZS5maW5kV2hlcmUgIT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHVuZGVyc2NvcmUuZmluZFdoZXJlID09ICdmdW5jdGlvbicpe1xuICAgICAgICBpZiAoIV8uaXNPYmplY3Qoc2VsZi5mb3JtLnBlcnNvbmFsLnBhc3Nwb3J0Lm5hdGlvbmFsaXR5KSkge1xuICAgICAgICAgICAgICBzZWxmLmZvcm0ucGVyc29uYWwucGFzc3BvcnQubmF0aW9uYWxpdHkgPSB1bmRlcnNjb3JlLmZpbmRXaGVyZShzZWxmLm1ldGEubmF0aW9uYWxpdGllcywge1xuICAgICAgICAgICAgICAgICAgbWFzdGVyQ29kZTogJydcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgc2VsZi5mb3JtLnBlcnNvbmFsLnBhc3Nwb3J0Lm5hdGlvbmFsaXR5ID0gdW5kZXJzY29yZS5maW5kV2hlcmUoc2VsZi5tZXRhLm5hdGlvbmFsaXRpZXMsIHtcbiAgICAgICAgICAgICAgICAgIG1hc3RlckNvZGU6IHNlbGYuZm9ybS5wZXJzb25hbC5wYXNzcG9ydC5uYXRpb25hbGl0eS5tYXN0ZXJDb2RlXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICB9IGVsc2Uge1xuICAgICAgICAgaWYgKCFfLmlzT2JqZWN0KHNlbGYuZm9ybS5wZXJzb25hbC5wYXNzcG9ydC5uYXRpb25hbGl0eSkpIHtcbiAgICAgICAgICAgICAgc2VsZi5mb3JtLnBlcnNvbmFsLnBhc3Nwb3J0Lm5hdGlvbmFsaXR5ID0gXy5maW5kV2hlcmUoc2VsZi5tZXRhLm5hdGlvbmFsaXRpZXMsIHtcbiAgICAgICAgICAgICAgICAgIG1hc3RlckNvZGU6ICcnXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHNlbGYuZm9ybS5wZXJzb25hbC5wYXNzcG9ydC5uYXRpb25hbGl0eSA9IF8uZmluZFdoZXJlKHNlbGYubWV0YS5uYXRpb25hbGl0aWVzLCB7XG4gICAgICAgICAgICAgICAgICBtYXN0ZXJDb2RlOiBzZWxmLmZvcm0ucGVyc29uYWwucGFzc3BvcnQubmF0aW9uYWxpdHkubWFzdGVyQ29kZVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgfVxuICAgIH0pO1xuXG4gICAgc2VsZi5nZXROZXdBZGRyZXNzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbnVtYmVyOiAnJyxcbiAgICAgICAgICAgIHN0cmVldDogJycsXG4gICAgICAgICAgICBjaXR5OiAnJyxcbiAgICAgICAgICAgIHBvc3Rjb2RlOiAnJyxcbiAgICAgICAgICAgIGNhbnRfZmluZDogZmFsc2UsXG4gICAgICAgICAgICBjYW50X2ZpbmRfZW1wOiBmYWxzZSxcbiAgICAgICAgICAgIGxlc3NfdGhhbl90aHJlZV95ZWFyczogZmFsc2UsXG4gICAgICAgICAgICBzdWdnZXN0aW9uczogW11cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBzZWxmLmF0dGFjaFNjb3BlID0gZnVuY3Rpb24oX3Njb3BlKSB7XG4gICAgICAgIF9zY29wZS5tZXRhID0gc2VsZi5tZXRhO1xuICAgICAgICBfc2NvcGUuZm9ybSA9IHNlbGYuZm9ybTtcbiAgICAgICAgX3Njb3BlLnByb2R1Y3QgPSBzZWxmLnByb2R1Y3Q7XG4gICAgICAgICRzY29wZSA9IF9zY29wZTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuICAgIHNlbGYuc2V0SWQgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignSW1wbGVtZW50IG9uIGNoaWxkIGNsYXNzIGxldmVsJyk7XG4gICAgfTtcblxuICAgIHNlbGYuZ2V0SWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0ltcGxlbWVudCBvbiBjaGlsZCBjbGFzcyBsZXZlbCcpO1xuICAgIH07XG5cbiAgICBzZWxmLmdldEN1SWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBzZWxmLnByb2R1Y3QuY3VpZDtcbiAgICB9O1xuXG4gICAgc2VsZi5zZXRDdUlkID0gZnVuY3Rpb24gKGN1aWQpIHtcbiAgICAgICAgc2VsZi5wcm9kdWN0LmN1aWQgPSBjdWlkO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuXG4gICAgc2VsZi5nZXRTdGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHNlbGYuZm9ybS5yZXF1ZXN0LnN0YXRlO1xuICAgIH1cblxuICAgIHNlbGYuZ2V0RE9CID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBsZXQgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuICAgICAgICBsZXQgYmlydGhNb250aCA9IHNlbGYuZm9ybS5wZXJzb25hbC5kb2IubW9udGgubnVtYmVyIC0xO1xuICAgICAgICBsZXQgbSA9IHRvZGF5LmdldE1vbnRoKCkgLSBiaXJ0aE1vbnRoO1xuICAgICAgICBsZXQgZCA9IHRvZGF5LmdldERhdGUoKSAtIHNlbGYuZm9ybS5wZXJzb25hbC5kb2IuZGF5O1xuICAgICAgICBsZXQgeSA9IHRvZGF5LmdldEZ1bGxZZWFyKCkgLSBzZWxmLmZvcm0ucGVyc29uYWwuZG9iLnllYXI7XG5cbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgc2VsZi5mb3JtLnBlcnNvbmFsLmRvYi55ZWFyICYmXG4gICAgICAgICAgICBzZWxmLmZvcm0ucGVyc29uYWwuZG9iLm1vbnRoICYmXG4gICAgICAgICAgICBzZWxmLmZvcm0ucGVyc29uYWwuZG9iLmRheVxuICAgICAgICApIHtcbiAgICAgICAgICAgIHJldHVybiBgJHtzZWxmLmZvcm0ucGVyc29uYWwuZG9iLmRheX0vJHtzZWxmLmZvcm0ucGVyc29uYWwuZG9iLm1vbnRoLm51bWJlcn0vJHtzZWxmLmZvcm0ucGVyc29uYWwuZG9iLnllYXJ9YFxuICAgICAgICB9XG4gXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgXG4gICAgXG5cbiAgICBzZWxmLmdldEFubnVhbEluY29tZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgbGV0IGluY29tZSA9IHNlbGYuZm9ybS5wZXJzb25hbC5hbm51YWxfaW5jb21lIHx8ICcnO1xuICAgICAgICAgICAgaW5jb21lID0gaW5jb21lICsgJyc7ICAgICAgICAgICAgXG4gICAgICAgICAgICBpbmNvbWUgPSBpbmNvbWUuc3BsaXQoJywnKS5qb2luKCcnKTtcbiAgICAgICAgcmV0dXJuIGluY29tZTtcbiAgICB9O1xuXG4gICAgc2VsZi5nZXRBbW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGxldCBsb2FuQW1vdW50ID0gc2VsZi5mb3JtLnJlcXVlc3QuYW1vdW50IHx8ICcnO1xuICAgICAgICAgICAgbG9hbkFtb3VudCA9IGxvYW5BbW91bnQgKyAnJzsgICAgICAgICAgICBcbiAgICAgICAgICAgIGxvYW5BbW91bnQgPSBsb2FuQW1vdW50LnNwbGl0KCcsJykuam9pbignJyk7XG4gICAgICAgIHJldHVybiBsb2FuQW1vdW50O1xuICAgIH07XG5cbiAgICBzZWxmLmdldFBhc3Nwb3J0RXhwaXJ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBsZXQgcGFydHMgPSBzZWxmLmZvcm0ucGVyc29uYWwucGFzc3BvcnQuZXhwaXJ5LnNwbGl0KCcvJyk7XG5cbiAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA9PSAzKSB7XG4gICAgICAgICAgICBsZXQgbm93ID0gRGF0ZS5ub3coKSxcbiAgICAgICAgICAgICAgICBqc0Zvcm1hdCA9IGAke3BhcnRzWzJdfS0ke3BhcnRzWzFdfS0ke3BhcnRzWzBdfWAsXG4gICAgICAgICAgICAgICAgZGF0ZU9iaiA9IERhdGUucGFyc2UoanNGb3JtYXQpO1xuXG4gICAgICAgICAgICByZXR1cm4gc2VsZi5mb3JtLnBlcnNvbmFsLnBhc3Nwb3J0LmV4cGlyeTtcblxuICAgICAgICAgICAgLy8gSWYgd2UgbmVlZCB0byB2YWxpZGF0ZSBpdCBtb3JlXG4gICAgICAgICAgICBpZiAobm93IDwgZGF0ZU9iaikge1xuICAgICAgICAgICAgICAgIHJldHVybiBzZWxmLmZvcm0ucGVyc29uYWwucGFzc3BvcnQuZXhwaXJ5O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH07XG5cbiAgICBzZWxmLnByZXBhcmVQZXJzb25hbERhdGEgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIG5hdGlvbmFsaXR5ID0gbnVsbDtcbiAgICAgICAgaWYodHlwZW9mIHNlbGYuZm9ybS5wZXJzb25hbC5wYXNzcG9ydC5uYXRpb25hbGl0eSAhPSAndW5kZWZpbmVkJyl7XG4gICAgICAgICAgICBuYXRpb25hbGl0eSA9IHNlbGYuZm9ybS5wZXJzb25hbC5wYXNzcG9ydC5uYXRpb25hbGl0eS5tYXN0ZXJDb2RlO1xuICAgICAgICB9XG4gICAgICAgIGxldCBkYXRhID0ge1xuICAgICAgICAgICAgZGV2aWNlVHlwZTogJ0hvbWUnLFxuICAgICAgICAgICAgaW5jb21lVHlwZTogJ0FubnVhbCcsXG4gICAgICAgICAgICBiaXJ0aERhdGU6IHNlbGYuZ2V0RE9CKCksXG4gICAgICAgICAgICBlTWFpbDogc2VsZi5mb3JtLnBlcnNvbmFsLmVtYWlsLFxuICAgICAgICAgICAgY29uZmlybUVtYWlsOiBzZWxmLmZvcm0ucGVyc29uYWwuY29uZmlybUVtYWlsLFxuICAgICAgICAgICAgdGl0bGU6IHNlbGYuZm9ybS5wZXJzb25hbC50aXRsZSxcbiAgICAgICAgICAgIGluY29tZTogc2VsZi5nZXRBbm51YWxJbmNvbWUoKSxcbiAgICAgICAgICAgIGxvYW5BbW91bnQ6IHNlbGYuZ2V0QW1vdW50KCksICAgICAgICAgICAgXG4gICAgICAgICAgICBwaG9uZU51bWJlcjogc2VsZi5mb3JtLnBlcnNvbmFsLnBob25lLFxuICAgICAgICAgICAgaG9tZU51bWJlcjogc2VsZi5mb3JtLnBlcnNvbmFsLmhvbWVOdW1iZXIsXG4gICAgICAgICAgICBsYXN0TmFtZTogc2VsZi5mb3JtLnBlcnNvbmFsLmxhc3RfbmFtZSxcbiAgICAgICAgICAgIGVtcGxveWVyTmFtZTogc2VsZi5mb3JtLnBlcnNvbmFsLmVtcGxveWVyLFxuICAgICAgICAgICAgcmVsYXRpdmVpbm15Y2I6IHNlbGYuZm9ybS5wZXJzb25hbC5yZWxhdGl2ZWlubXljYixcbiAgICAgICAgICAgIHJlbGF0aXZlTWVtYmVyc2hpcElkOiBzZWxmLmZvcm0ucGVyc29uYWwucmVsYXRpdmVNZW1iZXJzaGlwSWQsXG4gICAgICAgICAgICBhc3NvY2lhdGlvbjogc2VsZi5mb3JtLnBlcnNvbmFsLmFzc29jaWF0aW9uLFxuICAgICAgICAgICAgZW1wbG95ZXJBZGRyZXNzOiBzZWxmLmZvcm0ucGVyc29uYWwuZW1wbG95ZXJBZGRyZXNzLFxuICAgICAgICAgICAgZW1wbG95ZXJCdWlsZGluZ05hbWU6IHNlbGYuZm9ybS5wZXJzb25hbC5lbXBsb3llckJ1aWxkaW5nTmFtZSxcbiAgICAgICAgICAgIGVtcGxveWVyQnVpbGRpbmdOdW1iZXI6IHNlbGYuZm9ybS5wZXJzb25hbC5lbXBsb3llckJ1aWxkaW5nTnVtYmVyLFxuICAgICAgICAgICAgZW1wbG95ZXJDaXR5OiBzZWxmLmZvcm0ucGVyc29uYWwuZW1wbG95ZXJDaXR5LFxuICAgICAgICAgICAgZW1wbG95ZXJTdHJlZXQ6IHNlbGYuZm9ybS5wZXJzb25hbC5lbXBsb3llclN0cmVldCxcbiAgICAgICAgICAgIGVtcGxveWVyQWJvZGVOdW1iZXI6IHNlbGYuZm9ybS5wZXJzb25hbC5lbXBsb3llckFib2RlTnVtYmVyLFxuICAgICAgICAgICAgZW1wbG95ZXJQb3N0Y29kZTogc2VsZi5mb3JtLnBlcnNvbmFsLmVtcGxveWVyUG9zdGNvZGUsXG4gICAgICAgICAgICBlbXBsb3ltZW50U2VjdG9yOiBzZWxmLmZvcm0ucGVyc29uYWwuZW1wbG95bWVudFNlY3RvcixcbiAgICAgICAgICAgIGVtcGxveW1lbnRQb3NpdGlvbjogc2VsZi5mb3JtLnBlcnNvbmFsLmVtcGxveW1lbnRQb3NpdGlvbixcbiAgICAgICAgICAgIGZpcnN0TmFtZTogc2VsZi5mb3JtLnBlcnNvbmFsLmZpcnN0X25hbWUsXG4gICAgICAgICAgICBwYXNzcG9ydFZhbGlkVW50aWw6IHNlbGYuZ2V0UGFzc3BvcnRFeHBpcnkoKSxcbiAgICAgICAgICAgIG1pZGRsZU5hbWU6IHNlbGYuZm9ybS5wZXJzb25hbC5taWRkbGVfbmFtZSxcbiAgICAgICAgICAgIHBhc3Nwb3J0SWROdW1iZXI6IHNlbGYuZm9ybS5wZXJzb25hbC5wYXNzcG9ydC5udW1iZXIsXG4gICAgICAgICAgICBuYXRpb25hbGl0eTogbmF0aW9uYWxpdHksXG4gICAgICAgICAgICBlbXBsb3ltZW50U3RhdHVzOiBzZWxmLmZvcm0ucGVyc29uYWwuZW1wbG95bWVudFN0YXR1cyxcbiAgICAgICAgICAgIHBhc3Nwb3J0SXNzdWluZ0F1dGhvcml0eTogc2VsZi5mb3JtLnBlcnNvbmFsLnBhc3Nwb3J0LmF1dGhvcml0eSxcbiAgICAgICAgICAgIGRlcG9zaXRBbW91bnQ6IHNlbGYuZm9ybS5wZXJzb25hbC5kZXBvc2l0X2Ftb3VudFxuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIH07XG5cbiAgICBzZWxmLnByZXBhcmVBZGRyZXNzZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmKHR5cGVvZiBzZWxmLmZvcm0uYWRkcmVzc2VzWzBdLm51bWJlciA9PSAgJ3VuZGVmaW5lZCcgfHwgbnVsbCA9PSBzZWxmLmZvcm0uYWRkcmVzc2VzWzBdLm51bWJlcil7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGFkZCA9IHNlbGYuZm9ybS5hZGRyZXNzZXNbMF0ubnVtYmVyLnNwbGl0KFwiLFwiKTtcbiAgICAgICAgbGV0IGRhdGEgPSB7XG4gICAgICAgICAgICBjaXR5OiBzZWxmLmZvcm0uYWRkcmVzc2VzWzBdLmNpdHksXG4gICAgICAgICAgICBzdHJlZXQ6IG51bGwgIT0gc2VsZi5mb3JtLmFkZHJlc3Nlc1swXS5zdHJlZXQgPyBzZWxmLmZvcm0uYWRkcmVzc2VzWzBdLnN0cmVldCA6IFwiXCIsXG4gICAgICAgICAgICBwb3N0Y29kZTogc2VsZi5mb3JtLmFkZHJlc3Nlc1swXS5wb3N0Y29kZSxcbiAgICAgICAgICAgIGJ1aWxkaW5nTnVtYmVyOiBudWxsICE9IGFkZFsyXSA/IGFkZFsyXSA6IFwiXCIsXG4gICAgICAgICAgICBhYm9kZU51bWJlcjogbnVsbCAhPSBhZGRbMF0gPyBhZGRbMF0gOiBcIlwiLFxuICAgICAgICAgICAgYnVpbGRpbmdOYW1lOiBudWxsICE9IGFkZFsxXSA/IGFkZFsxXSA6IFwiXCJcbiAgICAgICAgfTtcbiAgICAgICAgZGF0YS5hZGRyZXNzID0gYCR7ZGF0YS5hYm9kZU51bWJlcn0gJHtkYXRhLmJ1aWxkaW5nTnVtYmVyfSAke2RhdGEuYnVpbGRpbmdOYW1lfSwgJHtkYXRhLnN0cmVldH0sICR7ZGF0YS5jaXR5fWA7XG4gICAgICAgIGxldCBhZGRpdGlvbmFsQWRkcmVzc2VzID0gc2VsZi5mb3JtLmFkZHJlc3Nlcy5zbGljZSgxLCBzZWxmLmZvcm0uYWRkcmVzc2VzLmxlbmd0aCk7XG5cbiAgICAgICAgXy5lYWNoKGFkZGl0aW9uYWxBZGRyZXNzZXMsIGZ1bmN0aW9uIChhZGRyLCBrZXkpIHtcbiAgICAgICAgICAgIGRhdGFbYHByZXZBZGRyJHsga2V5ICsgMX1DaXR5YF0gPSBhZGRyLmNpdHk7XG4gICAgICAgICAgICBkYXRhW2BwcmV2QWRkciR7IGtleSArIDF9U3RyZWV0YF0gPSBhZGRyLnN0cmVldDtcbiAgICAgICAgICAgIGRhdGFbYHByZXZBZGRyJHsga2V5ICsgMX1Qb3N0Y29kZWBdID0gYWRkci5wb3N0Y29kZTtcbiAgICAgICAgICAgIGRhdGFbYHByZXZBZGRyJHsga2V5ICsgMX1BYm9kZU51bWJlcmBdID0gYWRkci5udW1iZXI7XG4gICAgICAgICAgICBkYXRhW2BwcmV2QWRkciR7IGtleSArIDF9QnVpbGRpbmdOdW1iZXJgXSA9IGFkZHIubnVtYmVyO1xuICAgICAgICAgICAgZGF0YVtgcHJldkFkZHIkeyBrZXkgKyAxfWBdID0gYCR7YWRkci5udW1iZXJ9LCAke2FkZHIuc3RyZWV0fSwgJHthZGRyLmNpdHl9YDtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIH07XG5cbiAgICBzZWxmLnByZXBhcmVCYW5rRGV0YWlscyA9IGZ1bmN0aW9uICgpIHtcblxuICAgICAgICBsZXQgZGF0YSA9IHtcbiAgICAgICAgICAgIGJhbmtTb3J0Q29kZTogc2VsZi5mb3JtLmJhbmsuc29ydGNvZGUgfHwgJycsXG4gICAgICAgICAgICBiYW5rQWNjb3VudE51bWJlcjogc2VsZi5mb3JtLmJhbmsuYWNjb3VudF9udW1iZXIgfHwgJycsXG4gICAgICAgICAgICBiYW5rQWNjb3VudFR5cGU6IHNlbGYuZm9ybS5iYW5rLmN1cnJlbnRfb3Jfc2F2aW5ncyxcbiAgICAgICAgICAgIGJhbmtBY2NvdW50VXNhZ2U6IHNlbGYuZm9ybS5iYW5rLnBlcnNvbmFsX29yX2J1c2luZXNzXG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gTmFzdHkgaGFja3MgZm9yIHBlcnNpc3RlbnQgYXBpIGFzIHRoZXkgd29udCBjaGFuZ2UgaXRcbiAgICAgICAgZGF0YS5iYW5rU29ydENvZGUgPSBkYXRhLmJhbmtTb3J0Q29kZSArICcnO1xuICAgICAgICBkYXRhLmJhbmtBY2NvdW50TnVtYmVyID0gZGF0YS5iYW5rQWNjb3VudE51bWJlciArICcnO1xuXG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIH07XG5cbiAgICBzZWxmLnByZXBhcmVTZWN1cml0eURhdGEgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgbGV0IGRhdGEgPSB7XG4gICAgICAgICAgICBzZWN1cml0eVF1ZXN0aW9uOiBzZWxmLmZvcm0uc2VjdXJpdHkucXVlc3Rpb24sXG4gICAgICAgICAgICBzZWN1cml0eVF1ZXN0aW9uQW5zd2VyOiBzZWxmLmZvcm0uc2VjdXJpdHkuYW5zd2VyXG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfTtcblxuICAgIHNlbGYucHJlcGFyZVRvc0RhdGEgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGxldCBkYXRhID0ge1xuICAgICAgICAgICAgam9pbkZFQTogc2VsZi5mb3JtLnRvcy5qb2luX2ZlYSxcbiAgICAgICAgICAgIHByaXZhY3lBZ3JlZW1lbnRBZ3JlZWQ6IHNlbGYuZm9ybS50b3MucHJpdmFjeSxcbiAgICAgICAgICAgIGN1RWxpZ2liaWxpdHk6IHNlbGYuZm9ybS50b3MuY3VFbGlnaWJpbGl0eSA/IFwiQ0I6XCIrc2VsZi5mb3JtLnRvcy5jdUVsaWdpYmlsaXR5ICsgXCJcIiA6IHNlbGYuZm9ybS50b3MuY3VFbGlnaWJpbGl0eSxcbiAgICAgICAgICAgIGVoUG9zdGNvZGU6IHNlbGYuZm9ybS50b3MuZWhQb3N0Y29kZSxcbiAgICAgICAgICAgIGNhcmRpZmZWYWxlOiBzZWxmLmZvcm0udG9zLmNhcmRpZmZWYWxlXG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfTtcblxuICAgIHNlbGYucHJlcGFyZU9kZE1hbmRhdG9yeUZpZWxkcyA9IGZ1bmN0aW9uICgpIHtcblxuICAgICAgICBsZXQgZGF0YSA9IHtcbiAgICAgICAgICAgIGFtdFN0ZXA6ICcnLFxuICAgICAgICAgICAgdGVudXJlU3RlcDogJycsXG4gICAgICAgICAgICBjb21tb25Cb25kQ2hhcml0eTogc2VsZi5mb3JtLnBlcnNvbmFsLmNvbW1vbkJvbmRDaGFyaXR5LFxuICAgICAgICAgICAgc2Vjb25kRnVydGhlckFkZHJlc3M6IHNlbGYuZm9ybS5hZGRyZXNzZXMubGVuZ3RoID4gMixcbiAgICAgICAgICAgIG1vdmVkV2l0aGluM1llYXJzQ2hlY2tib3g6IHNlbGYuZm9ybS5hZGRyZXNzZXNbMF0ubGVzc190aGFuX3RocmVlX3llYXJzXG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfTtcblxuICAgIHdpbmRvdy5zYXZlQmFja3VwID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm47XG4gICAgICAgIHJldHVybiBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYXBwbGljYXRpb25Gb3JtRGF0YScsIEpTT04uc3RyaW5naWZ5KHNlbGYuZm9ybSkpO1xuICAgIH07XG5cbiAgICB3aW5kb3cubG9hZEJhY2t1cCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgICBsZXQgZGF0YSA9IG51bGw7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGxldCBiYWNrdXAgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYXBwbGljYXRpb25Gb3JtRGF0YScpIHx8ICd7fSc7XG4gICAgICAgICAgICBkYXRhID0gSlNPTi5wYXJzZShiYWNrdXApO1xuICAgICAgICB9IGNhdGNoKGV4Y2VwdGlvbikge1xuICAgICAgICAgICAgZGF0YSA9IG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZGF0YSkge1xuICAgICAgICAgICAgYW5ndWxhci5leHRlbmQoc2VsZi5mb3JtLCBkYXRhKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICB3aW5kb3cucHJ1bmVCYWNrdXAgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdhcHBsaWNhdGlvbkZvcm1EYXRhJywgJ3t9Jyk7XG4gICAgfTtcblxuICAgIHNlbGYuY2FjaGVkWWVhcnMgPSBudWxsO1xuICAgIGlmKCR3aW5kb3cuaW5uZXJXaWR0aCA8IDc2MCl7XG4gICAgICAgIHNlbGYubW9udGhzID0gW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICdKYW4nLFxuICAgICAgICAgICAgICAgIG51bWJlcjogMSxcbiAgICAgICAgICAgICAgICBkYXlzOiAzMVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAnRmViJyxcbiAgICAgICAgICAgICAgICBudW1iZXI6IDIsXG4gICAgICAgICAgICAgICAgZGF5czogMjhcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ01hcicsXG4gICAgICAgICAgICAgICAgbnVtYmVyOiAzLFxuICAgICAgICAgICAgICAgIGRheXM6IDMxXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICdBcHInLFxuICAgICAgICAgICAgICAgIG51bWJlcjogNCxcbiAgICAgICAgICAgICAgICBkYXlzOiAzMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAnTWF5JyxcbiAgICAgICAgICAgICAgICBudW1iZXI6IDUsXG4gICAgICAgICAgICAgICAgZGF5czogMzFcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ0p1bmUnLFxuICAgICAgICAgICAgICAgIG51bWJlcjogNixcbiAgICAgICAgICAgICAgICBkYXlzOiAzMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAnSnVseScsXG4gICAgICAgICAgICAgICAgbnVtYmVyOiA3LFxuICAgICAgICAgICAgICAgIGRheXM6IDMxXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICdBdWcnLFxuICAgICAgICAgICAgICAgIG51bWJlcjogOCxcbiAgICAgICAgICAgICAgICBkYXlzOiAzMVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAnU2VwdCcsXG4gICAgICAgICAgICAgICAgbnVtYmVyOiA5LFxuICAgICAgICAgICAgICAgIGRheXM6IDMwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICdPY3QnLFxuICAgICAgICAgICAgICAgIG51bWJlcjogMTAsXG4gICAgICAgICAgICAgICAgZGF5czogMzFcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ05vdicsXG4gICAgICAgICAgICAgICAgbnVtYmVyOiAxMSxcbiAgICAgICAgICAgICAgICBkYXlzOiAzMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAnRGVjJyxcbiAgICAgICAgICAgICAgICBudW1iZXI6IDEyLFxuICAgICAgICAgICAgICAgIGRheXM6IDMxXG4gICAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICB9XG4gICAgZWxzZXtcbiAgICAgICBzZWxmLm1vbnRocyA9IFtcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogJ0phbnVhcnknLFxuICAgICAgICAgICAgbnVtYmVyOiAxLFxuICAgICAgICAgICAgZGF5czogMzFcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogJ0ZlYnJ1YXJ5JyxcbiAgICAgICAgICAgIG51bWJlcjogMixcbiAgICAgICAgICAgIGRheXM6IDI4XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdNYXJjaCcsXG4gICAgICAgICAgICBudW1iZXI6IDMsXG4gICAgICAgICAgICBkYXlzOiAzMVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnQXByaWwnLFxuICAgICAgICAgICAgbnVtYmVyOiA0LFxuICAgICAgICAgICAgZGF5czogMzBcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogJ01heScsXG4gICAgICAgICAgICBudW1iZXI6IDUsXG4gICAgICAgICAgICBkYXlzOiAzMVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnSnVuZScsXG4gICAgICAgICAgICBudW1iZXI6IDYsXG4gICAgICAgICAgICBkYXlzOiAzMFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnSnVseScsXG4gICAgICAgICAgICBudW1iZXI6IDcsXG4gICAgICAgICAgICBkYXlzOiAzMVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnQXVndXN0JyxcbiAgICAgICAgICAgIG51bWJlcjogOCxcbiAgICAgICAgICAgIGRheXM6IDMxXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdTZXB0ZW1iZXInLFxuICAgICAgICAgICAgbnVtYmVyOiA5LFxuICAgICAgICAgICAgZGF5czogMzBcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogJ09jdG9iZXInLFxuICAgICAgICAgICAgbnVtYmVyOiAxMCxcbiAgICAgICAgICAgIGRheXM6IDMxXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdOb3ZlbWJlcicsXG4gICAgICAgICAgICBudW1iZXI6IDExLFxuICAgICAgICAgICAgZGF5czogMzBcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogJ0RlY2VtYmVyJyxcbiAgICAgICAgICAgIG51bWJlcjogMTIsXG4gICAgICAgICAgICBkYXlzOiAzMVxuICAgICAgICB9XG4gICAgXSBcbiAgICB9XG4gICAgc2VsZi5tZXRhID0ge1xuICAgICAgICB0aXRsZXM6IFtdLFxuICAgICAgICBuYXRpb25hbGl0aWVzOiBbXSxcbiAgICAgICAgYmFua190eXBlczogW10sXG4gICAgICAgIHNlY3VyaXR5X3F1ZXN0aW9uczogW10sXG4gICAgICAgIGRldmljZV90eXBlczogW10sXG4gICAgICAgIGluY29tZV90eXBlczogW10sXG4gICAgICAgIG1vbnRoczogc2VsZi5tb250aHMsXG4gICAgICAgIG1vbnRoc0RheXM6IGZ1bmN0aW9uIChtb250aCkge1xuICAgICAgICAgICAgbGV0IG1heERheXMgPSBtb250aC5kYXlzIHx8IDMxO1xuICAgICAgICAgICAgbGV0IGRheXMgPSBbXTtcblxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gbWF4RGF5czsgaSsrKSB7XG4gICAgICAgICAgICAgICAgZGF5cy5wdXNoKGkpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gZGF5cztcbiAgICAgICAgfSxcbiAgICAgICAgeWVhcnM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIC8vIFdlIGRvbnQgd2FudCB0byBkbyB0aGlzIGV2ZXJ5IHRpbWUhXG4gICAgICAgICAgICBpZiAoc2VsZi5jYWNoZWRZZWFycykge1xuICAgICAgICAgICAgICAgIHJldHVybiBzZWxmLmNhY2hlZFllYXJzO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZWxmLmNhY2hlZFllYXJzID0gW107XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGxldCB0aGlzWWVhciA9IG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKTtcbiAgICAgICAgICAgIGxldCBtYXhEYXRlID0gdGhpc1llYXIgLSAxODtcbiAgICAgICAgICAgIGxldCBtaW5EYXRlID0gdGhpc1llYXIgLSAxMDA7XG4gICAgICAgICAgICBsZXQgZGF0ZURpZmYgPSBtYXhEYXRlIC0gbWluRGF0ZTtcblxuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IGRhdGVEaWZmOyBpKyspIHtcbiAgICAgICAgICAgICAgICBsZXQgeWVhciA9IG1heERhdGUgLSBpO1xuICAgICAgICAgICAgICAgIHNlbGYuY2FjaGVkWWVhcnMucHVzaCh5ZWFyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBzZWxmLmNhY2hlZFllYXJzO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgIH07XG4gICAgXG4gICAgc2VsZi5wcm9kdWN0ID0ge1xuICAgICAgICBjdWlkOiBudWxsLFxuICAgICAgICBpZDogbnVsbFxuICAgIH07XG5cbiAgICBzZWxmLmZvcm0gPSB7XG5cbiAgICAgICAgcmVxdWVzdDoge1xuICAgICAgICAgICAgaWQ6IG51bGwsXG4gICAgICAgICAgICBzdGF0ZTogJ0lOX1BST0dSRVNTJ1xuICAgICAgICB9LFxuXG4gICAgICAgIHBlcnNvbmFsOiB7XG4gICAgICAgICAgICB0aXRsZTogJycsXG4gICAgICAgICAgICBmaXJzdF9uYW1lOiAnJyxcbiAgICAgICAgICAgIGxhc3RfbmFtZTogJycsXG4gICAgICAgICAgICBlbWFpbDogJycsXG4gICAgICAgICAgICBjb25maXJtRW1haWw6ICcnLFxuICAgICAgICAgICAgcGhvbmU6ICcnLFxuICAgICAgICAgICAgYW5udWFsX2luY29tZTogJycsXG4gICAgICAgICAgICBkb2I6IHtcbiAgICAgICAgICAgICAgICBkYXk6ICcnLFxuICAgICAgICAgICAgICAgIG1vbnRoOiAnJyxcbiAgICAgICAgICAgICAgICB5ZWFyOiAnJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHBhc3Nwb3J0OiB7XG4gICAgICAgICAgICAgICAgbmF0aW9uYWxpdHk6ICcnLFxuICAgICAgICAgICAgICAgIG51bWJlcjogJycsXG4gICAgICAgICAgICAgICAgYXV0aG9yaXR5OiAnJyxcbiAgICAgICAgICAgICAgICBleHBpcnk6ICcnXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuXG4gICAgICAgIHZlcmlmeToge1xuICAgICAgICAgICAgZW1haWw6ICcnLFxuICAgICAgICAgICAgcGhvbmU6ICcnLFxuICAgICAgICAgICAgbG9hbklkOiAnJyxcbiAgICAgICAgICAgIHNvcnRDb2RlOiAnJyxcbiAgICAgICAgICAgIGFjY291bnROdW1iZXI6ICcnLFxuICAgICAgICAgICAgY3VFbGlnaWJpbGl0eTogJydcbiAgICAgICAgfSxcblxuICAgICAgICBhZGRyZXNzZXM6IFtcbiAgICAgICAgICAgIHNlbGYuZ2V0TmV3QWRkcmVzcygpXG4gICAgICAgIF0sXG5cbiAgICAgICAgYmFuazoge1xuICAgICAgICAgICAgcGVyc29uYWxfb3JfYnVzaW5lc3M6ICdQRVJTT05BTCcsXG4gICAgICAgICAgICBjdXJyZW50X29yX3NhdmluZ3M6ICdDVVJSRU5UJyxcbiAgICAgICAgICAgIHNvcnRjb2RlOiAnJyxcbiAgICAgICAgICAgIGFjY291bnRfbnVtYmVyOiAnJ1xuICAgICAgICB9LFxuXG4gICAgICAgIHNlY3VyaXR5OiB7XG4gICAgICAgICAgICBxdWVzdGlvbjogJycsXG4gICAgICAgICAgICBhbnN3ZXI6ICcnXG4gICAgICAgIH0sXG5cbiAgICAgICAgdG9zOiB7XG4gICAgICAgICAgICBqb2luX2ZlYTogZmFsc2UsXG4gICAgICAgICAgICBwcml2YWN5OiBmYWxzZSxcbiAgICAgICAgICAgIGN1RWxpZ2liaWxpdHk6ICcnXG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgd2luZG93LmxvYWRCYWNrdXAoKTtcbn1dKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB0aGVtZS1hc3NldHMvanMvX2FwcGxpY2F0aW9ucy9fYmFzZS1zZXJ2aWNlLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");
},function(module,exports){eval("myCommunityBank.controller('loanApplicationController', ['$scope', 'cuLoansApiFactory', '$filter', 'loanApplicationService','baseApplicationService', '$timeout','$rootScope','$location','$window',  function($scope, cuLoansApiFactory, $filter, loanApplicationService,baseApplicationService, $timeout,$rootScope,$location,$window){\n\n    /* Here we setup the whole controller ready to do stuff! */\n    $scope.step = 'apply';\n    $scope.loansApi = cuLoansApiFactory;\n    $scope.allProducts = [];\n    $scope.productId = angular.element('[data-productid]').data('productid');\n    $scope.suggestedProduct = null;\n    $scope.globalErrorMessage = null;\n    \n\n    $scope.loanCtrlConf = {};\n    $scope.loanCtrlConf.changeDetail = true;\n    \n\n    var metaConfig = (function () {\n        var el = angular.element('[data-meta]');\n\n        var config = {\n            titles: true,\n            security: true,\n            nationalities: true,\n            purposes:  true,\n            empstatuss:  true,\n            creditratings:  true,\n        };\n        \n\n        if (el.length) {\n            var mods = el.data('meta').split(',');\n            _.each(mods, function (m) {\n                var item = m.split(':');\n                config[item[0].trim()] = item[1].trim() === 'true';\n            })\n        }\n\n        return config;\n    })();\n\n    $scope.result = {\n        apr: 0,\n        term: 0,\n        total: 0,\n        union: '',\n        amount: 0,\n        monthlies: 0,\n        first_date: 0,\n        status: 'REJT',\n        esign: null\n    };\n\n    $scope.summary = {\n        monthlyRepayments: function () {\n            return loanApplicationService.monthlyRepayments($scope.suggestedProduct);\n        },\n        totalRepayment: function () {\n            return loanApplicationService.totalRepayment($scope.suggestedProduct);\n        },\n        APR: function () {\n            return loanApplicationService.getAPR();\n        }\n    }\n\n    $scope.amount = {\n        options: {\n            step: 50,\n             enforceStep: false,\n            // enforceRange: true,\n            showSelectionBar: true,\n            onEnd: saveApplicationInformation,\n            translate: function (value) {\n                return $filter('currency')(value, '&pound')\n            }\n        }\n    };\n\n    $scope.apr = {\n        options : {\n\n        }\n    }\n\n    $scope.term = {\n        options: {\n            step: 1,\n            showSelectionBar: true,\n            // enforceRange: true,\n             enforceStep: false,\n            onEnd: saveApplicationInformation,\n            translate: function (value) {\n                return (value + \" months\")\n            }\n        }\n    };\n\n\n    $scope.application = loanApplicationService.attachScope($scope);\n    $scope.loansApi.syncMeta($scope.meta, metaConfig);\n\n    function setupSliders (product) {\n        $scope.amount.options.floor = product.minLoanAmount;\n        $scope.amount.options.ceil = product.maxLoanAmount;\n        $rootScope.maxApr = product.fairApr;\n        $rootScope.minApr = product.excellentApr;\n        if(localStorage.getItem('loanAmount') < product.minLoanAmount || localStorage.getItem('loanAmount') > product.maxLoanAmount){\n            localStorage.setItem('loanAmount','null');\n        }\n        if(localStorage.getItem('loanAmount') != 'undefined' && 'null' != localStorage.getItem('loanAmount') && null != localStorage.getItem('loanAmount'))\n            $scope.application.form.request.amount = localStorage.getItem('loanAmount');\n        else\n            $scope.application.form.request.amount = product.minLoanAmount;\n\n        $scope.term.options.floor = product.minLoanTermInMonths;\n        $scope.term.options.ceil = product.maxLoanTermInMonths;\n        if(localStorage.getItem('loanTerm') < product.minLoanTermInMonths || localStorage.getItem('loanTerm') > product.maxLoanTermInMonths){\n            localStorage.setItem('loanTerm','null');\n        }\n        if(localStorage.getItem('loanTerm') != 'undefined' && 'null' != localStorage.getItem('loanTerm') && null != localStorage.getItem('loanTerm')) \n         $scope.application.form.request.term = localStorage.getItem('loanTerm');\n        else \n         $scope.application.form.request.term = product.minLoanTermInMonths;\n    };\n\n    function loadApplication () {\n        if ($scope.application.getId()) {\n            continueApplication();\n        } else {\n            startApplication();\n        }\n    };\n\n    function continueApplication () {\n        var cuId = angular.element('[data-cuid]').data('cuid');\n        $scope.application.setCuId(cuId);\n        saveSliderInformation();\n        saveApplicationInformation();\n    };\n\n    function startApplication () {\n        saveSliderInformation();\n\n        if ($scope.suggestedProduct) {\n            $scope.loansApi.startApplication($scope.suggestedProduct, function (data) {\n                var cuId = angular.element('[data-cuid]').data('cuid');\n\n                $scope.application\n                    .setId(data.LoanApplicationID)\n                    .setCuId(cuId)\n\n                    window.saveBackup();\n\n            }, function (err) {\n                console.error(err);\n            });\n        }\n    };\n\n    function saveSliderInformation () {\n      \n        localStorage.setItem('loanAmount', $scope.application.form.request.amount);\n        localStorage.setItem('loanTerm', $scope.application.form.request.term);\n    };\n\n    function saveApplicationInformation () {\n        // Dont bother doing anything if we\n        // have not matched a product\n        if (!$scope.suggestedProduct || !$scope.application.getId()) {\n            return false;\n        }\n\n        saveSliderInformation();\n\n        var constructedApplicationData = $scope.application.prepareForApi();\n\n        $scope.loansApi.syncApplication(constructedApplicationData, function (data) {\n            // console.log(data);\n        }, function (err) {\n            console.error(err);\n        });\n    };\n\n    function findProduct (callback) {\n       var under = _.noConflict(); \n       if(typeof under.findWhere != 'undefined' && typeof under.findWhere == 'function'){\n        $scope.suggestedProduct = under.findWhere($scope.products, {\n            loanProductId: $scope.productId            \n        });\n       } else {\n        $scope.suggestedProduct = _.findWhere($scope.products, {\n            loanProductId: $scope.productId            \n        });\n       }\n\n        callback($scope.suggestedProduct);\n    };\n    \n    $scope.loansApi.fetchEmployerList(function (data){\n        $scope.employerList = data;\n    }, function (err) {\n        UIkit.notification({\n            message: err,\n            status: 'danger',\n            pos: 'bottom-right'\n        });\n    });\n\n    $scope.toggleSearch = function () {\n        $window.onclick = null;\n        $scope.menuOpen = !$scope.menuOpen;\n    \n        if ($scope.model.menuOpen) {\n            $window.onclick = function (event) {\n                $scope.menuOpen = false;\n                $scope.$apply();\n            };\n        }\n    };\n\n    $window.onclick = function(e) {\n        if(e.target.className.split(\" \").indexOf(\"clickoutside\") < 0)\n        {\n            $scope.parentObj.businesschoiceSelected = false;\n            $scope.parentObj.occupationchoiceSelected = false;\n            $scope.parentObj.employerchoiceSelected = false;\n            $scope.parentObj.associationchoiceSelected = false;\n        }\n    }\n\n    $scope.loansApi.fetchBusinessList(function (data){\n        $scope.businessList = data;\n    }, function (err) {\n        UIkit.notification({\n            message: err,\n            status: 'danger',\n            pos: 'bottom-right'\n        });\n    });\n\n    $scope.loansApi.fetchOccupationList(function (data){\n        $scope.occupationList = data;\n    }, function (err) {\n        UIkit.notification({\n            message: err,\n            status: 'danger',\n            pos: 'bottom-right'\n        });\n    });\n\n    $scope.loansApi.fetchAssociationList(function (data){\n      $scope.associationList = [];\n      for(var i in data)  {\n        $scope.associationList.push(data[i].associationName);\n      }\n    }, function (err) {\n        UIkit.notification({\n            message: err,\n            status: 'danger',\n            pos: 'bottom-right'\n        });\n    });\n\n\n    $scope.loansApi.fetchEmployerList(function (data){\n        \n        $scope.employerList = data;\n        \n        \n\n    }, function (err) {\n        UIkit.notification({\n            message: err,\n            status: 'danger',\n            pos: 'bottom-right'\n        });\n    });\n\n    $scope.loansApi.fetchCharityList(function (data){\n        \n        $scope.charityList = data;\n        \n        \n\n    }, function (err) {\n        UIkit.notification({\n            message: err,\n            status: 'danger',\n            pos: 'bottom-right'\n        });\n    });\n\n    $scope.loansApi.fetchProducts(function (data){\n        var prodId = angular.element('[data-productid]').data('productid');\n        if(\"REFER\" == prodId) {\n            //call api to send sms/email\n            return;\n        } else if(\"NA\" == prodId) {\n            return;\n        }\n        $scope.products = data;\n\n        \n\n        return findProduct(function (product) {\n            $scope.apr.options.maxApr = product.fairApr;\n            $scope.apr.options.minApr = product.excellentApr;\n            setupSliders(product);\n            loadApplication();\n        });\n\n    }, function (err) {\n        UIkit.notification({\n            message: err,\n            status: 'danger',\n            pos: 'bottom-right'\n        });\n    });\n\n    /* We're now ready to start doing stuff with the form */\n\n    $scope.isActiveStep = function (step) {\n        return $scope.step == step;\n    };\n\n    $scope.setActiveStep = function (step) {\n        $scope.step = step;\n\n        $timeout(function () {\n            var el = jQuery('.application-section, .processing-step');\n\n            if (el.length) {\n\n                var offset = el.eq(0).position().top - 15;\n\n                jQuery('html, body').animate({\n                    scrollTop: offset\n                });\n            }\n        }, 150);\n\n        return $scope.step;\n    };\n    $scope.contentYes= 'no';\n    $scope.changeEmployerStaus = function (){\n        var allowedEmp = [\"ce\", \"se\", \"te\", \"em\", \"re\"];\n        if(baseApplicationService.getCuId() == 'C-0002') {\n            if(allowedEmp.indexOf($scope.application.form.personal.employmentStatus)>-1){\n                $scope.contentYes= 'yes';\n            } else {\n                $scope.contentYes= 'no';\n            }\n        } else {\n            if(allowedEmp.indexOf($scope.application.form.personal.employmentStatus)==-1){\n                $scope.noEmployer();\n            } else{\n                $scope.contentYes= 'yes';\n            }\n        }\n    }\n\n    $scope.submitApplication = function () {        \n        var income = baseApplicationService.getAnnualIncome();         \n        if(income < 18000 && baseApplicationService.getCuId() != 'C-0002'){\n            UIkit.modal.confirm(\"\\n                <p>Sorry but we can only lend to people with annual income above &pound;18000.</p>\", {\n                labels: {\n                    cancel: '',\n                    ok: \"Ok\"\n                }\n            }).then(function() {\n                history.back();\n            scope.$apply()\n            });\n        }\n               \n        if ($scope.application.form.addresses != 'undefined' && $scope.application.form.addresses.length > 0 && $scope.application.form.addresses[0].postcode == $scope.application.form.personal.employerPostcode && 'Self Employed' == $scope.application.form.personal.employer) {\n            UIkit.modal.confirm(\"\\n                <p>Sorry but we can only lend to people in fulltime employment.</p>\", {\n                labels: {\n                    cancel: '',\n                    ok: \"Ok\"\n                }\n            }).then(function() {\n                history.back();\n                scope.$apply()\n            });\n        } \n\n        var validation = loanApplicationService.validator.go();\n        $scope.globalErrorMessage = null;\n\n        \n\n        if (validation.success) {\n            $scope.setActiveStep('processing');\n            $scope.application.form.verify.loanId = $scope.application.getId();\n            $scope.loansApi.submitApplication($scope.application, function (data) {\n                var emi = loanApplicationService.calculateMonthlyPayment(data.amount,data.term,data.rate);\n                $scope.result = {\n                    amount: data.amount,\n                    term: data.term,\n                    apr: data.apr,\n                    monthlies: emi ,\n                    total: emi * data.term,\n                    first_date: data.firstInstallmentDate,\n                    union: data.allocatedCU,\n                    status: data.status,\n                    applicant: data.applicant\n                };\n                \n                \n                \n                if($scope.result.status == 'SAPR'){\n                   // move to that page where user will get accept or reject button\n                   //once user clicks accept call $scope.acceptApplication();\n                   // else $scope.setActiveStep('rejected');\n                   //  window.pruneBackup();\n                   $scope.application.amount = Math.trunc(data.amount);\n                   $scope.application.form.request.amount = Math.trunc(data.amount);\n                   $scope.application.term = data.term;\n                   $scope.application.form.request.term = data.term;\n                   $scope.application.apr = data.apr;\n                   $scope.suggestedProduct.excellentRate = data.rate;\n                    $scope.suggestedProduct.excellentApr = data.apr;\n                   $scope.setActiveStep('semiapproved');\n                   // $scope.acceptApplication();\n                   // $scope.generateAgreement();\n                }\n                else if ($scope.result.status == 'ADRB'){\n                    $scope.setActiveStep('advicerobo');\n                    $scope.application.amount = data.amount;\n                    $scope.application.apr = data.apr;\n                    $scope.application.term = data.term;\n                    $scope.application.datatoken = data.datatoken;\n                    setTimeout(function() {\n                        var d = document;\n                        var s = 'script';\n                        var id = 'advicerobo_com_sdk';\n                        var js, fjs = d.getElementsByTagName(s)[0];\n                        if (d.getElementById(id)) return;\n                        js = d.createElement(s);\n                        js.id = id;\n                        js.src = \"https://pcs.advicerobo.com/plugin/embed.js \";\n                        fjs.parentNode.insertBefore(js, fjs);\n                        var el = document.getElementById(\"my-questionnaire\");\n                        el.addEventListener(\n                        'ar.questionnaireSubmissionSucceeded',\n                        function(e) {\n                            $scope.setActiveStep('processing');  \n                            $scope.acceptApplication(false);\n                        },\n                        false\n                        );\n\n                        el.addEventListener(\n                        'ar.questionnaireCompleted',\n                        function(e) {\n                            $scope.$apply(function () {\n                                $scope.showLoading= true;\n                            });\n                            \n                            //$scope.setActiveStep('showLoading');\n                            //document.getElementById(\"overlayBox\").className = \"overlay text-center d_block\";\n                        },\n                        false\n                        );\n                    }, 2000);\n                }\n                else if ($scope.result.status == 'APPR') {\n                    $scope.application.amount = data.amount;\n                    $scope.application.term = data.term;\n                    //$scope.confirmBankDetails(false);\n                    $scope.setActiveStep('loanDetails');\n                    //$scope.acceptApplication(false)\n                } else {\n                    $scope.setActiveStep('rejected');\n                    window.pruneBackup();\n                }\n            }, function (err) {\n                $scope.globalErrorMessage = err;\n                $scope.setActiveStep('error');\n                console.error(err);\n            });\n        }\n    };\n    \n    $scope.goToBankDetails = function () {\n        $scope.result.amount = $scope.application.form.request.amount;\n        $scope.result.term = $scope.application.form.request.term;\n        \n        $scope.application.amount = $scope.application.form.request.amount;\n        $scope.application.term = $scope.application.form.request.term;\n        $scope.setActiveStep('loanDetails');\n    }\n    \n    $scope.acceptApplication = function (isRevised) {\n        $scope.loansApi.acceptApplication($scope.application, function (data) {\n            $scope.result = {\n                amount: data.loanAmount,\n                term: data.loanTermMonths,\n                apr: data.loanAPR,\n                monthlies: data.emiAmount,\n                total: data.loanAmount + data.totalInterestDue,\n                first_date: data.firstInstallmentDate,\n                union: data.allocatedCU,\n                status: data.status,\n                applicant : data.applicant\n            };\n            if ($scope.result.status == 'APPR') {\n                $scope.setActiveStep('accepted');\n                $scope.generateAgreement();\n            } else if ($scope.result.status == 'CAPR') {\n                $scope.setActiveStep('conditionallyapproved');\n            } else if ($scope.result.status == 'MAUR') {\n                if(isRevised){\n                    $scope.setActiveStep('rev_manually');\n                }else{\n                    $scope.setActiveStep('manually');\n                }\n                \n                window.pruneBackup();\n            }  else {\n                $scope.setActiveStep('rejected');\n                window.pruneBackup();\n            }\n        }, function (err) {\n            $scope.globalErrorMessage = err;\n            $scope.setActiveStep('error');\n            console.error(err);\n        });\n    };\n\n\n    $scope.generateAgreement = function () {\n        $scope.loansApi.generateAgreement($scope.application, function (data) {\n            if (data && data.esignUrl) {\n                $scope.result.esign = $scope.loansApi.getSafeEsignUrl(data.esignUrl);\n            } \n        }, function (err) {\n            $scope.globalErrorMessage = err;\n            $scope.setActiveStep('error');\n            console.error(err);\n        });\n    };\n\n    $scope.goToAgreement = function () {\n        $scope.setActiveStep('sign');\n        $scope.globalErrorMessage = null;\n    };\n\n    $scope.confirmSignature = function () {\n        UIkit.modal.confirm(\"\\n            <h3>Warning! Before you continue</h3>\\n            <p>Please make sure you've clicked the blue 'Click to Sign' button on the previous agreement document.</p>\\n            <p>If you continue now without clicking this button, your application will not be complete and you will need to start again.</p>\", {\n            labels: {\n                cancel: 'Back to agreement',\n                ok: \"Continue\"\n            }\n        }).then(function() {\n            window.pruneBackup();\n            $scope.$apply(function () {\n                $scope.setActiveStep('confirmation');\n            });\n        });\n    };\n\n    $scope.increaseTerm = function () {\n         $scope.application.form.request.term = $scope.application.form.request.term + 1;\n    };\n\n    $scope.reduceTerm = function () {\n        $scope.application.form.request.term = $scope.application.form.request.term - 1;\n    };\n\n    $scope.increaseAmount = function () {\n         $scope.application.form.request.amount = $scope.application.form.request.amount + 100;\n    };\n\n    $scope.reduceAmount = function () {\n        $scope.application.form.request.amount = $scope.application.form.request.amount - 100;\n    };\n\n    $scope.lookupAddress = function (address) {\n        address.cant_find = false;\n\n        $scope.loansApi.lookupPostcode(address.postcode, function (data) {\n            address.city = data.generic.city;\n            address.street = data.generic.street;\n            address.postcode = data.generic.postcode;\n            address.suggestions = data.suggestions;\n\n            return $scope.updateApplication();\n    }, function (err) {\n            address.cant_find = true;\n            UIkit.notification({\n                message: err,\n                status: 'danger',\n                pos: 'bottom-right'\n            });\n        });\n    };\n\n    $scope.lookupAddressEmp = function (address) {\n        address.cant_find_emp = false;\n\n        $scope.loansApi.lookupPostcode(address.employerPostcode, function (data) {\n            address.employerCity = data.generic.city;\n            address.employerStreet = data.generic.street;\n            address.employerPostcode = data.generic.postcode;\n            address.employerSuggestions = data.suggestions;\n\n            return $scope.updateApplication();\n        }, function (err) {\n            address.cant_find_emp = true;\n            UIkit.notification({\n                message: err,\n                status: 'danger',\n                pos: 'bottom-right'\n            });\n        });\n    };\n\n    $scope.addressThreeYearToggle = function (address) {\n        if (address.less_than_three_years) {\n            $scope.application.form.addresses.push(loanApplicationService.getNewAddress());\n        } else {\n            var index = $scope.application.form.addresses.indexOf(address);\n            $scope.application.form.addresses.splice(index + 1, 1);\n        }\n    };\n\n    $scope.updateApplication = function () {\n        saveApplicationInformation();\n    };\n    $scope.onTextClick = function ($event) {\n        $event.target.select();\n    };\n    \n    $scope.parentObj = {};\n    $scope.parentObj.businesschoiceSelected= true;\n    $scope.setBusiness = function(val){\n      console.info(val);\n      $scope.application.form.personal.employmentSector = val;\n      $scope.parentObj.businesschoiceSelected= false;\n    }\n  \n    $scope.parentObj.occupationchoiceSelected= true;\n    $scope.setOccupation = function(val){\n      console.info(val);\n      $scope.application.form.personal.employmentPosition = val;\n      $scope.parentObj.occupationchoiceSelected= false;\n    }\n\n    $scope.parentObj.employerchoiceSelected= true;\n    $scope.setEmployerName = function(val){\n      console.info(val);\n      $scope.application.form.personal.employer = val;\n      $scope.parentObj.employerchoiceSelected= false;\n    }\n\n    $scope.parentObj.associationchoiceSelected= false;\n    $scope.setAssociation = function(val){\n      console.info(val);\n      $scope.application.form.personal.association = val;\n      $scope.parentObj.associationchoiceSelected= false;\n    }\n\n    self.loanAmtRemoveComma =  function(amt){\n        var loanAmount = amt || '';\n            loanAmount = loanAmount + '';            \n            loanAmount = loanAmount.split(',').join('');\n            return loanAmount;\n    }\n\n    $scope.validateLoanDetails = function () {\n        //console.info($scope.amount.options.floor,$scope.application.form.request.amount ,$scope.amount.options.ceil)\n        \n        if(typeof $scope.application.form == 'undefined' || typeof $scope.amount.options == 'undefined' || typeof $scope.term.options == 'undefined'){\n            return;\n        }\n        else if (loanAmtRemoveComma($scope.application.form.request.amount) < parseInt($scope.amount.options.floor) || loanAmtRemoveComma($scope.application.form.request.amount) > parseInt($scope.amount.options.ceil)) {\n          return \"inv-amt\";\n        } else if ($scope.application.form.request.term < parseInt($scope.term.options.floor) || $scope.application.form.request.term > parseInt($scope.term.options.ceil)) {\n          return \"inv-term\";\n        } else if ($scope.application.form.request.term < parseInt($scope.term.options.floor) || $scope.application.form.request.term > parseInt($scope.application.term)) {\n          return \"inv-term\";\n        } \n      };\n\n      $scope.confirmDetails = function(){\n        $scope.setActiveStep('processing');\n            var weburl = $location.absUrl();\n            if(weburl.split('refId=') && weburl.split('refId=')[1] && weburl.split('refId=')[1].split(\"&\")){\n                $scope.application.form.verify.loanId = weburl.split('refId=')[1].split(\"&\")[0];\n            } else {\n                alert(\"Reference ID not defined\");\n            }\n            $scope.application.form.verify.url = weburl;\n            $scope.loansApi.confirmDetails($scope.application.form.verify, \n            function (data) {\n\n                $scope.result = {\n                    amount: data.amount,\n                    term: data.term,\n                    apr: data.apr,\n                    monthlies: data.monthlyRepayment,\n                    total: data.totalAmount,\n                    applicant : data.fullName\n                };\n\n                $scope.setActiveStep('loanDetails');\n             }, function (err) {\n                $scope.errorMessageConfused = err;\n                $scope.setActiveStep('mismatchDetail');\n            });\n    };\n\n    $scope.benefitCU = function(){\n        $scope.setActiveStep('processing');\n            var weburl = $location.absUrl();\n            if(weburl.split('refId=') && weburl.split('refId=')[1] && weburl.split('refId=')[1].split(\"&\")){\n                $scope.application.form.verify.loanId = weburl.split('refId=')[1].split(\"&\")[0];\n            } else {\n                alert(\"Reference ID not defined\");\n            }\n            $scope.application.form.verify.url = weburl;\n            $scope.loansApi.confirmDetails($scope.application.form.verify, \n            function (data) {\n\n                $scope.result = {\n                    amount: data.amount,\n                    term: data.term,\n                    apr: data.apr,\n                    monthlies: data.monthlyRepayment,\n                    total: data.totalAmount,\n                    applicant : data.fullName\n                };\n\n                $scope.setActiveStep('benefitCreditUnion');\n             }, function (err) {\n                $scope.errorMessageConfused = err;\n                $scope.setActiveStep('mismatchDetail');\n            });\n    };\n\n    $scope.saveDetails = function(){\n        var cuId = angular.element('[data-cuid]').data('cuid');\n        var validation = loanApplicationService.validator.validateBankDetails();\n        if (validation.success) {\n            $scope.setActiveStep('processing');\n            if(cuId == 'BS-0001') $scope.application.form.verify.cuEligibility  = \"true\";\n            $scope.loansApi.saveDetails($scope.application.form.verify, function (data) {\n                \n                 $scope.application\n                 .setId($scope.application.form.verify.loanId);\n                 $scope.application.amount = $scope.result.amount; \n                 $scope.application.term = $scope.result.term; \n                 $scope.acceptApplication();\n             \n                \n             }, function (err) {\n                $scope.errorMessageConfused = err.description;\n                $scope.setActiveStep('mismatchBankDetail');\n            });\n        }\n            \n    };\n    \n\n    $scope.showDebugInformation = function () {\n        var information = localStorage.getItem('applicationFormData') || null;\n        UIkit.modal.alert((\"\\n            <textarea style=\\\"width: 100%; height: 50px; background: black; color: white;\\\">\" + information + \"</textarea>\\n            <p>Please copy/paste all the text from above.</p>\\n        \"));\n    }\n\n    $scope.getMyQuote = function(url){\n        saveSliderInformation();\n        window.location.href = url;\n    }\n\n    $scope.noEmployer = function(){\n        UIkit.modal.confirm(\"\\n            <p>Sorry but we can only lend to people in fulltime employment.</p>\", {\n            labels: {\n                cancel: '',\n                ok: \"Ok\"\n            }\n        }).then(function() {\n            history.back();\n          scope.$apply()\n        });\n    }\n}]).filter('highlight',['$sce', function ($sce) {\n    return function (input, query) {\n      if (query === '' || query == null) {\n          return \"\";\n      } else if (query.length < 1) {\n          return \"\";\n      }\n      return $sce.trustAsHtml(input.toUpperCase().replace(RegExp('('+ query.toUpperCase() + ')', 'g'), '<b class=\"high_light\">$1</b>'));\n    }\n  }])\n.filter('highlight2',['$sce', function ($sce) {\n    return function (input, query) {\n      if (query === '' || query == null) {\n          return $sce.trustAsHtml(input);\n      } else if (query.length < 1) {\n          return $sce.trustAsHtml(input);\n      }\n      return $sce.trustAsHtml(input.toUpperCase().replace(RegExp('('+ query.toUpperCase() + ')', 'g'), '<b class=\"high_light\">$1</b>'));\n    }\n  }])\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");
},function(module,exports){eval("myCommunityBank.factory('cuLoansApiFactory', ['baseApiFactory', '$http', '$sce', function(baseApiFactory, $http, $sce){\n\n    var self = this;\n    var apiKey = baseApiFactory.apiKey;\n\n    var ihub = baseApiFactory.ihub;\n    var culoans = baseApiFactory.culoans;\n\n    self.aggrUrl = baseApiFactory.aggrUrl;\n    self.aggrCode = baseApiFactory.aggrCode;\n    self.brandid = baseApiFactory.brandid;\n\n    self.enableSandbox = baseApiFactory.enableSandbox;\n    self.disableSandbox = baseApiFactory.disableSandbox;\n\n    self.getSafeEsignUrl = baseApiFactory.getSafeEsignUrl;\n    self.getApiRequestUrl = baseApiFactory.getApiRequestUrl;\n    self.getApiRequestHeaders = baseApiFactory.getApiRequestHeaders;\n\n    self.lookupPostcode = baseApiFactory.lookupPostcode;\n    self.formatPostCodeResponse = baseApiFactory.formatPostCodeResponse;\n\n    self.syncMeta = baseApiFactory.syncMeta;\n    self.getSalutations = baseApiFactory.getSalutations;\n    self.getNationalities = baseApiFactory.getNationalities;\n    self.getSecurityQuestions = baseApiFactory.getSecurityQuestions;\n\n    self.products = null;\n\n    self.getProducts = function () {\n        return self.products;\n    };\n\n    self.fetchProducts = function (success, fail) {\n        return baseApiFactory.getApi('loanproducts', {\n            aggrCode: self.aggrCode\n        }, function (data) {\n            self.products = data.loanProducts;\n            if (success) {\n                return success(self.products);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n    self.employerList = null;\n\n    self.getemployerList = function () {\n        return self.employerList;\n    };\n    \n    self.occupationList = null;\n\n    self.getoccupationList = function () {\n        return self.occupationList;\n    };\n\n    self.businessList = null;\n\n    self.getbusinessList = function () {\n        return self.businessList;\n    };\n\n    self.associationList = null;\n\n    self.getassociationList = function () {\n        return self.associationList;\n    };\n    \n    self.fetchEmployerList = function (success, fail) {\n        return baseApiFactory.getApi('employers', {}, function (data) {\n        \n            self.employerList = data;\n            if (success) {\n                return success(self.employerList);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n    self.fetchEmployerList();\n    \n    self.fetchOccupationList = function (success, fail) {\n        return baseApiFactory.getApiFiles('employers/occupation', {}, function (data) {\n            self.occupationList = data.occupation;\n            if (success) {\n                return success(self.occupationList);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n    self.fetchOccupationList();\n\n    self.fetchBusinessList = function (success, fail) {\n        return baseApiFactory.getApiFiles('employers/business', {}, function (data) {\n        \n            self.businessList = data;\n            if (success) {\n                return success(self.businessList);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n    self.fetchBusinessList();\n\n    self.fetchAssociationList = function (success, fail) {\n        return baseApiFactory.getApi('association', {}, function (data) {\n        \n            self.associationList = data.Association;\n            if (success) {\n                return success(self.associationList );\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n    self.fetchAssociationList();\n\n\n    self.charityList = null;\n\n    self.getcharityList = function () {\n        return self.charityList;\n    };\n\n\n     self.fetchCharityList = function (success, fail) {\n        return baseApiFactory.getApiFiles('association/commonbond', {}, function (data) {\n        \n            self.charityList = data;\n            if (success) {\n                return success(self.charityList);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n    self.fetchCharityList();\n\n    self.startApplication = function (product, success, fail) {\n        return baseApiFactory.postApi('loanapplications', {\n            aggregator: self.aggrCode,\n            aggr_url: self.aggrUrl,\n             brandid: self.brandid,\n            loanProductID: product.loanProductId,\n            state: 'IN_PROGRESS'\n        }, function (data) {\n            if (success) {\n                return success(data);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n\n    };\n\n    self.syncApplication = function(appData, success, fail) {\n\n        appData.aggrUrl = self.aggrUrl;\n        appData.aggrCode = self.aggrCode;\n        appData.aggregator = self.aggrCode;\n        appData.brandid = self.brandid;\n\n        return baseApiFactory.putApi('loanapplications', appData, function (data) {\n            if (success) {\n                return success(data);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n    self.submitApplication = function(app, success, fail) {\n\n        var appData = app.prepareForApi();\n        appData.state = 'SUBMITTED';\n        appData.aggrUrl = self.aggrUrl;\n        appData.aggrCode = self.aggrCode;\n        appData.aggregator = self.aggrCode;\n        appData.brandid = self.brandid;\n\n        return baseApiFactory.putApi('loanapplications', appData, function (data) {\n\n            if (success) {\n                return success(data);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n    self.acceptApplication = function(app, success, fail) {\n\n        var appData = {\n            loanApplicationId: app.getId(),\n            state: 'ACCEPTED' ,\n            amount: app.amount,\n            term : app.term\n        };\n\n        return baseApiFactory.putApi('loanapplications', appData, function (data) {\n\n            if (success) {\n                return success(data);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n    self.confirmDetails = function(obj, success, fail) {\n\n        \n        return baseApiFactory.postApiFiles('loanapplications/confirmdetails', obj, function (data) {\n\n            if (success) {\n                \n                //alert(\"Your mail id send successfully\");\n                return success(data);\n                \n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n    self.confirmDetailsUpload = function(obj, success, fail) {\n         return baseApiFactory.postApiFiles('loanapplications/confirmuploaddetails', obj, function (data) {\n              if (success) {\n                        return success(data);       \n                    }\n                }, function (err) {\n                    if (fail) {\n                        return fail(err);\n                    }\n                });\n            };\n\n    self.saveDetails = function(obj, success, fail) {\n\n        \n        return baseApiFactory.postApiFiles('loanapplications/savedetails', obj, function (data) {\n\n            if (success) {\n                \n                return success(data);\n                \n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n\n    self.referApplication = function(obj, success, fail) {\n\n        \n        return baseApiFactory.postApiFiles('loanapplications/applyreferred', obj, function (data) {\n\n            if (success) {\n                \n                //alert(\"Your mail id send successfully\");\n                return success(data);\n                \n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n    self.generateAgreement = function (app, success, fail) {\n\n        var appData = {\n            loanApplicationId: app.getId(),\n            state: 'GEN_AGREEMENT'\n        };\n\n        return baseApiFactory.putApi('loanapplications', appData, function (data) {\n            if (success) {\n                return success(data);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n    return self;\n}]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},function(module,exports){eval('myCommunityBank.service(\'loanApplicationService\', [\'baseApplicationService\', function (baseApplicationService) {\n\n    var self = this;\n    var $scope = {};\n\n    self.attachScope = function(_scope) {\n        _scope.meta = self.meta;\n        _scope.form = self.form;\n        $scope = _scope;\n        return this;\n    };\n\n    self.getDOB = baseApplicationService.getDOB;\n    self.getCuId = baseApplicationService.getCuId;\n    self.setCuId = baseApplicationService.setCuId;\n    self.getState = baseApplicationService.getState;\n    self.getNewAddress = baseApplicationService.getNewAddress;\n    self.getAnnualIncome = baseApplicationService.getAnnualIncome;\n    self.getPassportExpiry = baseApplicationService.getPassportExpiry;\n\n    self.setId = function (id) {\n        self.form.request._loanApplicationId = id;\n        return this;\n    };\n\n    self.getId = function () {\n        if (self.form.request._loanApplicationId) {\n            return self.form.request._loanApplicationId;\n        } else {\n            return null;\n        }\n    };\n\n    \n\n    baseApplicationService.getId = self.getId;\n    baseApplicationService.setId = self.setId;\n\n    self.getAmount = function () {\n        return $scope.form.request.amount;\n    };\n\n    self.getTerm = function () {\n        return $scope.form.request.term;\n    };\n\n    self.getCreditHistory = function () {\n        return $scope.form.request.creditHistory;\n    };\n\n    self.getLoanUse = function () {\n        return $scope.form.request.loanUse;\n    };\n\n    self.getLoanUseIfOthers = function () {\n        return $scope.form.request.loanUseIfOthers;\n    };\n\n    self.getAPR = function () {\n        if ($scope.suggestedProduct) {\n            return parseFloat($scope.suggestedProduct.excellentApr);\n        } else {\n            return \'-\';\n        }\n    };\n\n    self.getRate = function () {\n        if ($scope.suggestedProduct) {\n            return $scope.suggestedProduct.excellentRate;\n        } else {\n            return \'-\';\n        }\n    };\n\n    self.getProductId = function () {\n        if ($scope.suggestedProduct) {\n            return $scope.suggestedProduct.loanProductId;\n        } else {\n            return null;\n        }\n    };\n\n    \n\n    self.getProductName = function () {\n        if ($scope.suggestedProduct) {\n            return $scope.suggestedProduct.productName;\n        } else {\n            return \'-\';\n        }\n    };\n\n\n    self.prepareTosData = baseApplicationService.prepareTosData;\n    self.prepareAddresses = baseApplicationService.prepareAddresses;\n    self.prepareBankDetails = baseApplicationService.prepareBankDetails;\n    self.prepareSecurityData = baseApplicationService.prepareSecurityData;\n    self.preparePersonalData = baseApplicationService.preparePersonalData;\n    self.prepareOddMandatoryFields = baseApplicationService.prepareOddMandatoryFields;\n\n    self.prepareForApi = function () {\n        var data = {\n            cuId: self.getCuId(),\n            term: self.getTerm(),\n            state: self.getState(),\n            loanAmount: self.getAmount(),\n            excellentRate: self.getRate(),\n            existingLoanApr: self.getAPR(),\n            loanApplicationId: self.getId(),\n            LoanApplicationID: self.getId(),\n            loanPurpose: self.getProductName(),\n            loanProductID: self.getProductId(),\n            loanUse : self.getLoanUse(),\n            loanUseIfOthers : self.getLoanUseIfOthers(),\n            creditHistory : self.getCreditHistory(),\n        };\n        angular.extend(\n            data,\n            self.prepareTosData(),\n            self.prepareAddresses(),\n            self.prepareBankDetails(),\n            self.preparePersonalData(),\n            self.prepareSecurityData()\n        );\n        // strip empty values as api cant handle\n        _.each(data, function removeEmpty(value, key) {\n            if (!value && value !== 0) {\n                delete data[key];\n            }\n        });\n\n        angular.extend(data, self.prepareOddMandatoryFields());\n\n        saveBackup();\n        return data;\n    };\n\n    self.calculateMonthlyPayment = function (amount, term, interest) {\n        // This formula was provided from the client, so no idea how it works.\n        if (isNaN(interest)) {\n            return \'\';\n        }\n\n        interest = interest * .01;\n        var monthlyRate = Math.pow((interest * 100.0 / 1200.0 + 1.0), term) * (interest * 100.0 / 1200.0) / (Math.pow((interest * 100.0 / 1200.0 + 1.0), term) - 1) * amount;\n        var monthlyRateRounded = (Math.round(monthlyRate * 100) / 100);\n        return monthlyRateRounded;\n    }\n\n    self.calculatePayableInterest = function (amount, term, interest) {\n        return self.calculateTotalRepayment() - amount;\n    };\n\n    self.calculateTotalRepayment = function (amount, term, interest) {\n        if (isNaN(interest)) {\n            return \'\';\n        }\n\n        var monthlyPayment = self.calculateMonthlyPayment(amount, term, interest);\n        var totalPayment = monthlyPayment * term;\n\n        return totalPayment;\n    };\n\n    self.monthlyRepayments = function (product) {\n        if (!product) {\n            return \'\';\n        }\n\n        return self.calculateMonthlyPayment(self.getAmount(), self.getTerm(), self.getRate());\n    };\n\n    self.totalRepayment = function (product) {\n        if (!product) {\n            return \'\';\n        }\n\n        return self.calculateTotalRepayment(self.getAmount(), self.getTerm(), self.getRate());\n    };\n    \n    self.cachedYears = null;\n    self.meta = baseApplicationService.meta;\n\n    self.form = baseApplicationService.form;\n\n    self.validator = {\n        errors: [],\n        success: false,\n        validateBankDetails: function validateBankDetails() {\n            self.validator.success = false;\n            self.validator.errors = [];\n            var data = baseApplicationService.form.verify;\n\n            if(!data.sortCode){\n                self.validator.errors.push("Please make sure you\'ve entered your Sort Code.");\n            }\n            if(!data.accountNumber){\n                self.validator.errors.push("Please make sure you\'ve entered your Account Number.");\n            }\n            if(!data.cuEligibility && angular.element(\'[data-cuid]\').data(\'cuid\') != \'BS-0001\'){\n                self.validator.errors.push("Please confirm your Eligibility for membership to the Credit Union.");\n            }\n            if (self.validator.errors.length == 0) {\n               \n                self.validator.success = true;\n            }\n            return self.validator;\n        },\n        go: function go() {\n\n            self.validator.success = false;\n            self.validator.errors = [];\n\n            var data = self.prepareForApi();\n            // Annual Income\n            if (isNaN(data.income)) {\n                self.validator.errors.push("Please make sure you\'ve entered your annual income.");\n            } else {\n                var num = parseFloat(data.income);\n                if(num < 18000 && data.cuId != \'C-0002\'){\n                    self.validator.errors.push("Sorry but we can only lend to people with annual income above £18000.");\n                }\n                else if (num < 1) {\n                    self.validator.errors.push("Please make sure you\'ve entered your annual income accurately.");\n                }\n            }\n\n           \n\n            // Bank account type\n            if (!data.bankAccountType) {\n                self.validator.errors.push("Please make sure you\'ve picked your bank account type. (a)");\n            } else {\n                if (data.bankAccountType !== \'CURRENT\' && data.bankAccountType !== \'SAVINGS\') {\n                    self.validator.errors.push("Please make sure you\'ve picked a valid bank account type (b)");\n                }\n            }\n\n            // Bank account usage\n            if (!data.bankAccountUsage) {\n                self.validator.errors.push("Please make sure you\'ve picked your bank account type. (c)");\n            } else {\n                if (data.bankAccountUsage !== \'PERSONAL\' && data.bankAccountUsage !== \'BUSINESS\') {\n                    self.validator.errors.push("Please make sure you\'ve picked a valid bank account type. (d)");\n                }\n            }\n\n            // Address details\n            if(!data.address) {\n                self.validator.errors.push("Please make sure you\'ve entered your address.");\n            }\n\n            /*if (!data.buildingNumber) {\n                self.validator.errors.push("Please make sure you\'ve entered a building name or number.");\n            }*/\n\n            if (!data.city) {\n                self.validator.errors.push("Please make sure you\'ve entered a town or city.");\n            }\n\n            if (!data.street) {\n                self.validator.errors.push("Please make sure you\'ve entered a street or road.");\n            }\n\n            // Postcode details\n            if (!data.postcode) {\n                self.validator.errors.push("Please make sure you\'ve entered a postcode.");\n            } else if (data.postcode.length > 8 || data.postcode.length < 5) {\n                self.validator.errors.push("Please make sure you\'ve entered your postcode correctly.");\n            }\n\n            // Loan Purpose\n            if (!data.loanUse) {\n                 self.validator.errors.push("Please make sure you\'ve entered your purpose of loan.");\n            }\n            if (data.loanUse == \'Other\' && !data.loanUseIfOthers) {\n                 self.validator.errors.push("Please make sure you\'ve entered the specific loan purpose.");\n            }\n\n            // Personal details\n            if (!data.title) {\n                self.validator.errors.push("Please make sure you\'ve entered your title.");\n            }\n\n            if (!data.firstName) {\n                self.validator.errors.push("Please make sure you\'ve entered your first name.");\n            }\n\n            if (!data.lastName) {\n                self.validator.errors.push("Please make sure you\'ve entered your last name.");\n            }\n\n            if (!data.birthDate) {\n                self.validator.errors.push("Please make sure you\'ve entered your date of birth.");\n            } else{\n                var today = new Date();\n                var month = parseInt(self.form.personal.dob.month.number -1);\n                var day = parseInt(self.form.personal.dob.day);\n                var year = parseInt(self.form.personal.dob.year);\n                var result = new Date(year+18, month, day) <= today;\n                if(!result){\n                    self.validator.errors.push("You are not completed 18 year.");\n                }\n            }\n            \n            \n\n            \n            // Email address\n            if (!data.eMail) {\n                self.validator.errors.push("Please make sure you\'ve entered your email address.");\n            } else {\n                var re = /^(([^<>()\\[\\]\\.,;:\\s@\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\"]+)*)|(\\".+\\"))@(([^<>()[\\]\\.,;:\\s@\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\"]{2,})$/i;\n                if (!re.test(data.eMail)) {\n                    self.validator.errors.push("Please make sure you\'ve entered a valid email.");\n                }\n            }\n\n            // Confirm Email address\n            if (!data.confirmEmail) {\n                self.validator.errors.push("Please make sure you\'ve entered your confirm email address.");\n            } else {\n                var re$1 = /^(([^<>()\\[\\]\\.,;:\\s@\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\"]+)*)|(\\".+\\"))@(([^<>()[\\]\\.,;:\\s@\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\"]{2,})$/i;\n                if (!re$1.test(data.confirmEmail)) {\n                    self.validator.errors.push("Please make sure you\'ve entered a valid email.");\n                }\n            }\n\n            if (data.confirmEmail != data.eMail){\n                self.validator.errors.push("Please make sure you\'ve entered your confirm email address same as email address.");\n            }\n\n            // Phone number\n            if (!data.phoneNumber) {\n                self.validator.errors.push("Please make sure you\'ve entered your phone number.");\n            } else if (isNaN(data.phoneNumber)) {\n                self.validator.errors.push("Please make sure you\'ve entered a valid phone number.");\n            }\n\n            // Employer Status\n            var allowedEmp = ["ce", "se", "te", "em", "re"];\n\n            var mandEmploDetails = ["se", "em"];\n            \n            if (!data.employmentStatus) {\n                self.validator.errors.push("Please make sure you\'ve entered your employer status.");\n            } else {\n                if(baseApplicationService.getCuId() != \'C-0002\') {\n                    if(allowedEmp.indexOf(data.employmentStatus)==-1){\n                        self.validator.errors.push("Only Employed and Self Employed status allowed.");\n                    }\n                }\n            }\n            \n            \n            \n            \n            \n\n            // Employer\n            if(baseApplicationService.getCuId() == \'C-0002\') {\n                \n            } else{\n                if(mandEmploDetails.indexOf($scope.application.form.personal.employmentStatus)>-1){\n                    if(!data.employmentSector){\n                        self.validator.errors.push("Please make sure you\'ve entered your business/sector.");\n                    } \n                    if(!data.employmentPosition){\n                        self.validator.errors.push("Please make sure you\'ve entered your occupation/job title.");\n                    }\n                    if (!data.employerName) {\n                        self.validator.errors.push("Please make sure you\'ve entered your employers name.");\n                    } \n                }\n            }\n            \n\n            // Privacy Policy\n            if (!data.privacyAgreementAgreed && baseApplicationService.getCuId() == \'BS-0001\') {\n                self.validator.errors.push("To continue you must agree to our privacy policy.");\n            }\n            \n            if(!data.cuEligibility && baseApplicationService.getCuId() == \'BS-0001\'){\n                self.validator.errors.push("Please confirm your Eligibility for membership to the Credit Union.");\n            }\n\n            // Loan Amount\n            if (!data.loanAmount) {\n                self.validator.errors.push("Please make sure you\'ve entered an amount to borrow.");\n            } else {\n                var num$1 = parseFloat(data.loanAmount);\n                if (num$1 < $scope.amount.options.floor || num$1 > $scope.amount.options.ceil) {\n                    self.validator.errors.push("Please make sure you\'ve picked a valid amount to borrow.");\n                }\n            }\n\n            // Loan Term\n            if (!data.term) {\n                self.validator.errors.push("Please make sure you\'ve picked a borrowing term.");\n            } else {\n                var num$2 = parseFloat(data.term);\n                if (num$2 < $scope.term.options.floor || num$2 > $scope.term.options.ceil) {\n                    self.validator.errors.push("Please make sure you\'ve picked a valid borrowing repayment term.");\n                }\n            }\n\n            // Api loan id\n            if(!data.LoanApplicationID) {\n                self.validator.errors.push("Sorry something went wrong, please refresh and try again. (a)");\n            } else {\n                if (isNaN(data.LoanApplicationID)) {\n                    self.validator.errors.push("Sorry something went wrong, please refresh and try again. (b)");\n                }\n            }\n\n            if(!data.loanApplicationId) {\n                self.validator.errors.push("Sorry something went wrong, please refresh and try again. (c)");\n            } else {\n                if (isNaN(data.loanApplicationId)) {\n                    self.validator.errors.push("Sorry something went wrong, please refresh and try again. (d)");\n                }\n            }\n\n            // They have a suggested product?\n            if(!data.loanProductID) {\n                self.validator.errors.push("Sorry something went wrong, please refresh and try again. (c)");\n            }\n\n            // Make sure they have a nationality\n            if (!data.nationality) {\n                self.validator.errors.push("Please make sure you\'ve picked your nationality.");\n            } else {\n\n                // If they\'re not british, we need all their details\n                if (data.nationality !== \'British\') {\n\n                    if (!data.passportIdNumber) {\n                        self.validator.errors.push("Please make sure you\'ve entered your passport number.");\n                    }\n\n                    // We also make sure their passport has not expired\n                    if (!data.passportValidUntil) {\n                        self.validator.errors.push("Please make sure you\'ve entered your passport expiry.");\n                    } else {\n                        var parts = data.passportValidUntil.split(\'/\');\n\n                        if (parts.length !== 3) {\n                            self.validator.errors.push("Please make sure you\'ve entered your passport expiry correctly.");\n                        } else {\n                            var now = Date.now();\n                            var expires = Date.parse(((parts[2]) + "-" + (parts[1]) + "-" + (parts[0])));\n                            if (now > expires) {\n                                self.validator.errors.push("Sorry your passport has expired, we can only acccept non-British applicants with valid passports.");\n                            }\n                        }\n                    }\n\n                    // And they stated their issuing authority\n                    if (!data.passportIssuingAuthority) {\n                        self.validator.errors.push("Please make sure you\'ve entered your passports issuing authority.");\n                    }\n                }\n            }\n\n            if (!data.securityQuestion) {\n                self.validator.errors.push("Please make sure you\'ve picked a security question.");\n            }\n\n            if (!data.securityQuestionAnswer) {\n                self.validator.errors.push("Please make sure you\'ve entered your security answer.");\n            } else {\n                if (data.securityQuestionAnswer.length > 50) {\n                    self.validator.errors.push("Please make sure your security answer is less than 50 characters.");\n                }\n            }\n\n            if (data.state !== \'IN_PROGRESS\') {\n                self.validator.errors.push("Sorry we\'ve already processed your application. If you have not received your result please phone us.");\n            }\n\n            if (self.validator.errors.length == 0) {\n                self.validator.success = true;\n            }\n\n            return self.validator;\n        }\n    };\n}]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,');
},function(module,exports){eval("myCommunityBank.controller('savingsApplicationController', ['$scope', 'cuSavingsApiFactory','cuLoansApiFactory', '$filter', 'savingsApplicationService','baseApplicationService', '$timeout','$window','$location',  function($scope, cuSavingsApiFactory,cuLoansApiFactory, $filter, savingsApplicationService,baseApplicationService, $timeout,$window,$location){\n    /* Here we setup the whole controller ready to do stuff! */\n    $scope.step = 'apply';\n    $scope.savingsApi = cuSavingsApiFactory;\n    $scope.loansApi = cuLoansApiFactory;\n    $scope.globalErrorMessage = null;\n    $scope.savingDetail = false;\n    if(angular.element('[data-cuid]').data('cuid') == 'BS-0001' ) {\n        $scope.savingDetail = true;\n    }\n    \n    var metaConfig = (function () {\n        var el = angular.element('[data-meta]');\n\n        var config = {\n            titles: true,\n            security: true,\n            nationalities: true,\n            purposes : true,\n            empstatuss:  true,\n            creditratings:  true,\n        };\n\n        if (el.length) {\n            var mods = el.data('meta').split(',');\n            _.each(mods, function (m) {\n                var item = m.split(':');\n                config[item[0].trim()] = item[1].trim() === 'true';\n            })\n        }\n\n        return config;\n    })();\n\n    $scope.result = {\n        union: '',\n        status: 'REJT',\n        esign: null\n    };\n\n    $scope.application = savingsApplicationService.attachScope($scope);\n    $scope.savingsApi.syncMeta($scope.meta, metaConfig);\n\n    $window.onclick = function(e) {\n        if(e.target.className.split(\" \").indexOf(\"clickoutside\") < 0)\n        {\n            $scope.parentObj.businesschoiceSelected = false;\n            $scope.parentObj.occupationchoiceSelected = false;\n            $scope.parentObj.employerchoiceSelected = false;\n            $scope.parentObj.associationchoiceSelected = false;\n        }\n    }\n\n    $scope.loansApi.fetchBusinessList(function (data){\n        $scope.businessList = data;\n    }, function (err) {\n        UIkit.notification({\n            message: err,\n            status: 'danger',\n            pos: 'bottom-right'\n        });\n    });\n\n    $scope.loansApi.fetchOccupationList(function (data){\n        $scope.occupationList = data;\n    }, function (err) {\n        UIkit.notification({\n            message: err,\n            status: 'danger',\n            pos: 'bottom-right'\n        });\n    });\n\n    $scope.loansApi.fetchAssociationList(function (data){\n      $scope.associationList = [];\n      for(var i in data)  {\n        $scope.associationList.push(data[i]);\n      }\n    }, function (err) {\n        UIkit.notification({\n            message: err,\n            status: 'danger',\n            pos: 'bottom-right'\n        });\n    });\n\n    $scope.loansApi.fetchEmployerList(function (data){  \n        $scope.employerList = data;   \n    }, function (err) {\n        UIkit.notification({\n            message: err,\n            status: 'danger',\n            pos: 'bottom-right'\n        });\n    });\n\n    $scope.parentObj = {};\n    $scope.parentObj.businesschoiceSelected= true;\n    $scope.setBusiness = function(val){\n      console.info(val);\n      $scope.application.form.personal.employmentSector = val;\n      $scope.parentObj.businesschoiceSelected= false;\n    }\n  \n    $scope.parentObj.occupationchoiceSelected= true;\n    $scope.setOccupation = function(val){\n      console.info(val);\n      $scope.application.form.personal.employmentPosition = val;\n      $scope.parentObj.occupationchoiceSelected= false;\n    }\n\n    $scope.parentObj.associationchoiceSelected= false;\n    $scope.setAssociation = function(val){\n      console.info(val);\n      $scope.application.form.personal.association = val;\n      $scope.parentObj.associationchoiceSelected= false;\n    }\n\n    $scope.parentObj.employerchoiceSelected= true;\n    $scope.setEmployerName = function(val){\n      console.info(val);\n      $scope.application.form.personal.employer = val;\n      $scope.parentObj.employerchoiceSelected= false;\n    }\n\n    /**\n     * Upload document\n     */\n    $scope.uploadFile = function () {\n        $scope.processDropzone();\n    };\n\n    $scope.reset = function () {\n        $scope.resetDropzone();\n    };\n\n    function loadApplication () {\n        if ($scope.application.getId()) {\n            continueApplication();\n        } else {\n            startApplication();\n        }\n    };\n\n    function continueApplication () {\n\n        var appData = {\n            savingsProductId: angular.element('[data-product]').data('product'),\n            cuId: angular.element('[data-cuid]').data('cuid'),\n        };\n\n        $scope.application.setProductId(appData.savingsProductId).setCuId(appData.cuId);\n    };\n\n    function startApplication () {\n\n        var appData = {\n            savingsProductId: angular.element('[data-product]').data('product'),\n            cuId: angular.element('[data-cuid]').data('cuid'),\n        };\n\n        $scope.savingsApi.startApplication(appData, function (data) {\n\n            $scope.application\n                .setId(data.SavingsApplicationID)\n                .setProductId(appData.savingsProductId)\n                .setCuId(appData.cuId);\n\n                window.saveBackup();\n        }, function (err) {\n            console.error(err);\n        });\n    };\n\n    function saveApplicationInformation () {\n\n        var constructedApplicationData = $scope.application.prepareForApi();\n\n        $scope.savingsApi.syncApplication(constructedApplicationData, function (data) {\n            // console.log(data);\n        }, function (err) {\n            console.error(err);\n        });\n    };\n\n    /* We're now ready to start doing stuff with the form */\n\n    $scope.isActiveStep = function (step) {\n        return $scope.step == step;\n    };\n\n    $scope.setActiveStep = function (step) {\n        $scope.step = step;\n\n        $timeout(function () {\n            var el = jQuery('.application-section, .processing-step');\n\n            if (el.length) {\n\n                var offset = el.eq(0).position().top - 15;\n\n                jQuery('html, body').animate({\n                    scrollTop: offset\n                });\n            }\n        }, 150);\n\n        return $scope.step;\n    };\n\n    $scope.submitApplication = function () {\n\n        var validation = savingsApplicationService.validator.go();\n        $scope.globalErrorMessage = null;\n        if (validation.success) {\n            $scope.setActiveStep('processing');\n\n            $scope.savingsApi.submitApplication($scope.application, function (data) {\n\n                $scope.result = {\n                    union: data.allocatedCU,\n                    status: data.status,\n                    esign: null\n                };\n\n                if ($scope.result.status === 'APPR' || $scope.result.status === 'ARST') {\n                    $scope.setActiveStep('accepted');\n                } else if ($scope.result.status === 'CAPR') {\n                    $scope.setActiveStep('conditionallyapproved');\n                } else {\n                    $scope.setActiveStep('rejected');\n                }\n            }, function (err) {\n                $scope.globalErrorMessage = err;\n                $scope.setActiveStep('error');\n                console.error(err);\n            });\n        }\n    };\n\n    $scope.submitEmail = function(){\n        $scope.setActiveStep('processing');\n        \n            $scope.savingsApi.submitEmail($scope.application.form.personal.email, function (data) {\n                \n             }, function (err) {\n                $scope.globalErrorMessage = err;\n                $scope.setActiveStep('error');\n                console.error(err);\n            });\n    };\n\n    $scope.goToAgreement = function () {\n        $scope.setActiveStep('generatingagreement');\n        $scope.globalErrorMessage = null;\n\n        $scope.savingsApi.generateAgreement($scope.application, function (data) {\n            if (data && data.esignUrl) {\n                $scope.result.esign = $scope.savingsApi.getSafeEsignUrl(data.esignUrl);\n                $scope.setActiveStep('sign');\n            } else {\n                $scope.setActiveStep('sign');\n            }\n        }, function (err) {\n            $scope.globalErrorMessage = err;\n            $scope.setActiveStep('error');\n            console.error(err);\n        });\n    };\n\n    $scope.confirmSignature = function () {\n        UIkit.modal.confirm(\"\\n            <h3>Warning! Before you continue</h3>\\n            <p>Please make sure you've clicked the blue 'Click to Sign' button on the previous agreement document.</p>\\n            <p>If you continue now without clicking this button, your application will not be complete and you will need to start again.</p>\", {\n            labels: {\n                cancel: 'Back to agreement',\n                ok: \"Continue\"\n            }\n        }).then(function() {\n            window.pruneBackup();\n            $scope.$apply(function () {\n                $scope.setActiveStep('confirmation');\n            });\n        });\n    };\n\n    $scope.lookupAddress = function (address) {\n        address.cant_find = false;\n\n        $scope.savingsApi.lookupPostcode(address.postcode, function (data) {\n            address.city = data.generic.city;\n            address.street = data.generic.street;\n            address.postcode = data.generic.postcode;\n            address.suggestions = data.suggestions;\n\n            return $scope.updateApplication();\n        }, function (err) {\n            address.cant_find = true;\n            UIkit.notification({\n                message: err,\n                status: 'danger',\n                pos: 'bottom-right'\n            });\n        });\n    };\n\n    $scope.addressThreeYearToggle = function (address) {\n        if (address.less_than_three_years) {\n            $scope.application.form.addresses.push(savingsApplicationService.getNewAddress());\n        } else {\n            var index = $scope.application.form.addresses.indexOf(address);\n            $scope.application.form.addresses.splice(index + 1, 1);\n        }\n    };\n\n    $scope.updateApplication = function () {\n        saveApplicationInformation();\n    };\n\n    $scope.contentYes= 'no';\n    $scope.changeEmployerStaus = function (){\n        var allowedEmp = ['em','se','ce','te','ot'];\n            if(allowedEmp.indexOf($scope.application.form.personal.employmentStatus)>-1){\n                $scope.contentYes= 'yes';\n            } else {\n                $scope.contentYes= 'no';\n            }\n    }\n    $scope.checkMandatory = function(){\n        var notallowedEmp = ['st','re','hm','un'];\n        if(notallowedEmp.indexOf($scope.application.form.personal.employmentStatus)>-1){\n            if($scope.application.form.personal.relativeinmycb == 'no'){\n                return 'required';\n            }\n            else\n                return false; \n        } else {\n            return false;\n        }\n    }\n\n    $scope.checkRequired = function(){\n        if($scope.application.form.personal.relativeinmycb == 'no'){\n            return 'required';\n        }\n        else\n            return false;\n    }\n\n    $scope.showDebugInformation = function () {\n        var information = localStorage.getItem('applicationFormData') || null;\n        UIkit.modal.alert((\"\\n            <textarea style=\\\"width: 100%; height: 50px; background: black; color: white;\\\">\" + information + \"</textarea>\\n            <p>Please copy/paste all the text from above.</p>\\n        \"));\n    };\n\n    loadApplication();\n\n    $scope.confirmDetails = function(){\n        $scope.setActiveStep('processing');\n            var weburl = $location.absUrl(); \n            $scope.application.form.verify.url = weburl;\n            $scope.loansApi.confirmDetailsUpload($scope.application.form.verify, \n            function (data) {\n                $scope.savingsApi.setAuthTokenUpload(data.authToken);\n                $scope.savingsApi.setApplicationID(data.loanId);\n                $scope.result = {\n                    fullName: data.fullName,\n                    amount: data.amount,\n                };\n                $scope.setActiveStep('loanDetails');\n             }, function (err) {\n                $scope.errorMessageConfused = err;\n                $scope.setActiveStep('mismatchDetail');\n            });\n    };\n\n}]).filter('highlight',['$sce', function ($sce) {\n    return function (input, query) {\n      if (query === '' || query == null) {\n          return \"\";\n      } else if (query.length < 1) {\n          return \"\";\n      }\n      return $sce.trustAsHtml(input.toUpperCase().replace(RegExp('('+ query.toUpperCase() + ')', 'g'), '<b class=\"high_light\">$1</b>'));\n    }\n  }])\n.filter('highlight2',['$sce', function ($sce) {\n    return function (input, query) {\n      if (query === '' || query == null) {\n          return $sce.trustAsHtml(input);\n      } else if (query.length < 1) {\n          return $sce.trustAsHtml(input);\n      }\n      return $sce.trustAsHtml(input.toUpperCase().replace(RegExp('('+ query.toUpperCase() + ')', 'g'), '<b class=\"high_light\">$1</b>'));\n    }\n  }])\n  .directive('dropzone', ['cuSavingsApiFactory', function (cuSavingsApiFactory) {\n    return {\n        restrict: 'C',\n        link: function (scope, element, attrs) {\n\n            var config = {\n                url: 'https://file-applicationculoans.culoans.co.uk/cuplatformfiles/loanapplications/saveapplicantdocuments/'+cuSavingsApiFactory.getApplicationID(),\n                maxFilesize: 15,\n                paramName: \"file\",\n                maxThumbnailFilesize: 3,\n                parallelUploads: 1,\n                acceptedFiles: \".jpeg,.jpg,.png,.gif,.bmp,.pdf,.xls,.xlsx,.doc,.docx,.msg\",\n                autoProcessQueue: true,\n                headers: {\n                    'X-API-KEY': '8ab7c59b5843653401584365625a0000',\n                    'X-Auth-Token': cuSavingsApiFactory.getAuthTokenUpload(),\n                    \"Cache-Control\": \"\",\n                    \"X-Requested-With\" : \"\"\n                }\n            };\n\n            \n\n            var dropzone = new Dropzone(element[0], config);\n\n            dropzone.on(\"addedfile\", function(file) {\n                dropzone.options.url  = 'https://file-applicationculoans.culoans.co.uk/cuplatformfiles/loanapplications/saveapplicantdocuments/'+cuSavingsApiFactory.getApplicationID();\n                dropzone.options.headers =  {\n                    'X-API-KEY': '8ab7c59b5843653401584365625a0000',\n                    'X-Auth-Token': cuSavingsApiFactory.getAuthTokenUpload(),\n                    \"Cache-Control\": \"\",\n                    \"X-Requested-With\" : \"\"\n                }\n            });\n\n            scope.processDropzone = function () {\n                \n                dropzone.options.autoProcessQueue=true;\n                dropzone.processQueue();\n            };\n\n            scope.resetDropzone = function () {\n                dropzone.removeAllFiles();\n            }\n        }\n    }\n}])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");
},function(module,exports){eval("myCommunityBank.factory('cuSavingsApiFactory', ['baseApiFactory', '$http', '$sce', function(baseApiFactory, $http, $sce){\n\n    var self = this;\n    var apiKey = baseApiFactory.apiKey;\n\n    var ihub = baseApiFactory.ihub;\n    var culoans = baseApiFactory.culoans;\n\n    self.aggrUrl = baseApiFactory.aggrUrl;\n    self.aggrCode = baseApiFactory.aggrCode;\n    self.brandid = baseApiFactory.brandid;\n\n    self.enableSandbox = baseApiFactory.enableSandbox;\n    self.disableSandbox = baseApiFactory.disableSandbox;\n\n    self.getSafeEsignUrl = baseApiFactory.getSafeEsignUrl;\n    self.getApiRequestUrl = baseApiFactory.getApiRequestUrl;\n    self.getApiRequestHeaders = baseApiFactory.getApiRequestHeaders;\n\n    self.lookupPostcode = baseApiFactory.lookupPostcode;\n    self.formatPostCodeResponse = baseApiFactory.formatPostCodeResponse;\n\n    self.syncMeta = baseApiFactory.syncMeta;\n    self.getSalutations = baseApiFactory.getSalutations;\n    self.getNationalities = baseApiFactory.getNationalities;\n    self.getSecurityQuestions = baseApiFactory.getSecurityQuestions;\n\n    self.startApplication = function (appData, success, fail) {\n        return baseApiFactory.postApi('savingsapplications', {\n            aggregator: self.aggrCode,\n            aggr_url: self.aggrUrl,\n            brandid: self.brandid,            \n            savingsProductId: appData.savingsProductId,\n            cuId: appData.cuId,\n            state: 'IN_PROGRESS'\n        }, function (data) {\n            if (success) {\n                return success(data);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n    self.syncApplication = function(appData, success, fail) {\n\n        appData.aggrUrl = self.aggrUrl;\n        appData.aggrCode = self.aggrCode;\n        appData.aggregator = self.aggrCode;\n         appData.brandid = self.brandid;\n\n        return baseApiFactory.putApi('savingsapplications', appData, function (data) {\n            if (success) {\n                return success(data);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n    self.employerList = null;\n    \n        self.getemployerList = function () {\n            return self.employerList;\n        };\n    self.occupationList = null;\n    \n    self.getoccupationList = function () {\n            return self.occupationList;\n        };\n    \n    self.businessList = null;\n    \n    self.getbusinessList = function () {\n            return self.businessList;\n        };\n    \n    self.associationList = null;\n    \n    self.getassociationList = function () {\n            return self.associationList;\n        };\n\n    self.submitApplication = function(app, success, fail) {\n\n        var appData = app.prepareForApi();\n        appData.state = 'SUBMITTED';\n        appData.aggrUrl = self.aggrUrl;\n        appData.aggrCode = self.aggrCode;\n        appData.aggregator = self.aggrCode;\n        appData.brandid = self.brandid;\n\n        return baseApiFactory.putApi('savingsapplications', appData, function (data) {\n\n            if (success) {\n                return success(data);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n self.submitEmail = function(app, success, fail) {\n        var email = app;\n        return baseApiFactory.postApiFiles('savingsapplications/sendemails', {'email':email}, function (data) {\n\n            if (success) {\n                alert(\"Your mail id send successfully\");\n                return success(data);\n                \n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n\n\n    self.acceptApplication = function(){\n        var appData = {\n            \"state\": \"ACCEPTED\",\n            \"amount\": $scope.loan.loanAmount,\n            \"term\": $scope.loan.term,\n            \"loanApplicationId\": $scope.loan.loanApplicationId\n        }\n\n        return baseApiFactory.putApi('savingsapplications', appData, function (data) {\n            if (success) {\n                return success(data);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    }\n\n    self.generateAgreement = function (app, success, fail) {\n\n        var appData = {\n            cuId: app.getCuId(),\n            state: 'GEN_AGREEMENT',\n            savingsApplicationId: app.getId()\n        };\n\n        return baseApiFactory.putApi('savingsapplications', appData, function (data) {\n            if (success) {\n                return success(data);\n            }\n        }, function (err) {\n            if (fail) {\n                return fail(err);\n            }\n        });\n    };\n    self.authTokenUpload = null;\n    self.setAuthTokenUpload =  function(token) {\n        self.authTokenUpload = token;\n    }\n    \n    self.getAuthTokenUpload =  function() {\n        return self.authTokenUpload;\n    }\n    \n    self.applicationID = null;\n    \n    self.setApplicationID =  function(token) {\n        self.applicationID = token;\n    }\n    \n    self.getApplicationID =  function() {\n        return self.applicationID;\n    }\n\n    return self;\n}]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},function(module,exports){eval('myCommunityBank.service(\'savingsApplicationService\', [\'baseApplicationService\', function (baseApplicationService) {\n\n    var self = this;\n    var $scope = {};\n\n    self.attachScope = function(_scope) {\n        _scope.meta = self.meta;\n        _scope.form = self.form;\n        _scope.product = self.product;\n        $scope = _scope;\n        return this;\n    };\n\n    self.getDOB = baseApplicationService.getDOB;\n    self.getCuId = baseApplicationService.getCuId;\n    self.setCuId = baseApplicationService.setCuId;\n    self.getState = baseApplicationService.getState;\n    self.getNewAddress = baseApplicationService.getNewAddress;\n    self.getAnnualIncome = baseApplicationService.getAnnualIncome;\n    self.getPassportExpiry = baseApplicationService.getPassportExpiry;\n\n    self.setId = function (id) {\n        self.form.request._savingApplicationId = id;\n        return this;\n    };\n\n    self.getId = function () {\n        if (self.form.request._savingApplicationId) {\n            return self.form.request._savingApplicationId;\n        } else {\n            return null;\n        }\n    };\n\n    baseApplicationService.getId = self.getId;\n    baseApplicationService.setId = self.setId;\n\n    self.getProductId = function () {\n        return self.product.id;\n    };\n\n    self.setProductId = function (productId) {\n        self.product.id = productId;\n        return this;\n    };\n\n    self.prepareTosData = baseApplicationService.prepareTosData;\n    self.prepareAddresses = baseApplicationService.prepareAddresses;\n    self.prepareBankDetails = baseApplicationService.prepareBankDetails;\n    self.prepareSecurityData = baseApplicationService.prepareSecurityData;\n    self.preparePersonalData = baseApplicationService.preparePersonalData;\n    self.prepareOddMandatoryFields = baseApplicationService.prepareOddMandatoryFields;\n\n    self.prepareForApi = function () {\n\n        var data = {\n            cuId: self.getCuId(),\n            state: self.getState(),\n            savingsApplicationId: self.getId(),\n            SavingsApplicationID: self.getId(),\n            savingsProductID: self.getProductId(),\n            savingsProductId: self.getProductId()\n        };\n\n        angular.extend(\n            data,\n            self.prepareTosData(),\n            self.prepareAddresses(),\n            self.prepareBankDetails(),\n            self.preparePersonalData(),\n            self.prepareSecurityData()\n        );\n        \n        data.income = "99999";\n\n        // strip empty values as api cant handle\n        _.each(data, function removeEmpty(value, key) {\n            if (!value && value !== 0) {\n                delete data[key];\n            }\n        });\n\n        angular.extend(data, self.prepareOddMandatoryFields());\n\n        saveBackup();\n\n        return data;\n    };\n\n    self.cachedYears = null;\n    self.meta = baseApplicationService.meta;\n\n    self.form = baseApplicationService.form;\n    self.product = baseApplicationService.product;\n\n    self.validator = {\n        errors: [],\n        success: false,\n        go: function go() {\n\n            self.validator.success = false;\n            self.validator.errors = [];\n\n            var data = self.prepareForApi();\n\n           \n\n            // Bank Account Number\n            if (!data.bankAccountNumber) {\n                self.validator.errors.push("Please make sure you\'ve entered your bank account number correctly.");\n            } else if((data.bankAccountNumber + \'\').length !== 8) {\n                self.validator.errors.push("Please check your bank account number length as it looks incorrect.");\n            }\n\n            // Bank Sort Code\n            if (!data.bankSortCode) {\n                self.validator.errors.push("Please make sure you\'ve entered your bank sort code.");\n            } else if ((data.bankSortCode + \'\').length != 6 && (data.bankSortCode + \'\').length != 8) {\n                self.validator.errors.push("Please make sure you\'ve entered your bank sort code correctly");\n            }\n\n            // Bank account type\n            if (!data.bankAccountType) {\n                self.validator.errors.push("Please make sure you\'ve picked your bank account type. (a)");\n            } else {\n                if (data.bankAccountType !== \'CURRENT\' && data.bankAccountType !== \'SAVINGS\') {\n                    self.validator.errors.push("Please make sure you\'ve picked a valid bank account type (b)");\n                }\n            }\n\n            // Bank account usage\n            if (!data.bankAccountUsage) {\n                self.validator.errors.push("Please make sure you\'ve picked your bank account type. (c)");\n            } else {\n                if (data.bankAccountUsage !== \'PERSONAL\' && data.bankAccountUsage !== \'BUSINESS\') {\n                    self.validator.errors.push("Please make sure you\'ve picked a valid bank account type. (d)");\n                }\n            }\n\n            // Address details\n            if(!data.address) {\n                self.validator.errors.push("Please make sure you\'ve entered your address.");\n            }\n\n           /* if (!data.buildingNumber) {\n                self.validator.errors.push("Please make sure you\'ve entered a building name or number.");\n            }*/\n\n            if (!data.city) {\n                self.validator.errors.push("Please make sure you\'ve entered a town or city.");\n            }\n\n            if (!data.street) {\n                self.validator.errors.push("Please make sure you\'ve entered a street or road.");\n            }\n\n            // Postcode details\n            if (!data.postcode) {\n                self.validator.errors.push("Please make sure you\'ve entered a postcode.");\n            } else if (data.postcode.length > 8 || data.postcode.length < 5) {\n                self.validator.errors.push("Please make sure you\'ve entered your postcode correctly.");\n            }\n\n            // Personal details\n            if (!data.title) {\n                self.validator.errors.push("Please make sure you\'ve entered your title.");\n            }\n\n            if (!data.firstName) {\n                self.validator.errors.push("Please make sure you\'ve entered your first name.");\n            }\n\n            if (!data.lastName) {\n                self.validator.errors.push("Please make sure you\'ve entered your last name.");\n            }\n\n            if (!data.birthDate) {\n                self.validator.errors.push("Please make sure you\'ve entered your date of birth.");\n            }\n\n            // Email address\n            if (!data.eMail) {\n                self.validator.errors.push("Please make sure you\'ve entered your email address.");\n            } else {\n                var re = /^(([^<>()\\[\\]\\.,;:\\s@\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\"]+)*)|(\\".+\\"))@(([^<>()[\\]\\.,;:\\s@\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\"]{2,})$/i;\n                if (!re.test(data.eMail)) {\n                    self.validator.errors.push("Please make sure you\'ve entered a valid email.");\n                }\n            }\n\n            // Phone number\n            if (!data.phoneNumber) {\n                self.validator.errors.push("Please make sure you\'ve entered your phone number.");\n            } else if (isNaN(data.phoneNumber)) {\n                self.validator.errors.push("Please make sure you\'ve entered a valid phone number.");\n            }\n            // Employer Status\n            if(baseApplicationService.getCuId() == \'BS-0001\') {\n                if (!data.employmentStatus) {\n                    self.validator.errors.push("Please make sure you\'ve entered your employer status.");\n                    } \n    \n                // Employer\n                var allowedEmp = [\'em\', \'se\',\'ce\',\'te\',\'un\',\'ot\'];\n                if(!data.relativeinmycb){\n                    self.validator.errors.push("Please make sure you\'ve entered your relative information.");\n                    }\n                if(data.relativeinmycb == \'yes\'){\n                    if(!data.relativeMembershipId){\n                        self.validator.errors.push("Please make sure you\'ve entered your relative membership Id.");\n                        }\n                    }\n                    else{\n                        console.info("Yes ", data.relativeinmycb);\n                    if(allowedEmp.indexOf(data.employmentStatus)>-1){\n                        if(!data.employmentSector){\n                            self.validator.errors.push("Please make sure you\'ve entered your business/sector.");\n                            } \n                        if(!data.employmentPosition){\n                            self.validator.errors.push("Please make sure you\'ve entered your occupation/job title.");\n                            }\n                        if(!data.employerName){\n                            self.validator.errors.push("Please make sure you\'ve entered your Employer name.");\n                            }\n                        }\n                    if(!(allowedEmp.indexOf(data.employmentStatus)>-1)){\n                        if(!data.association){\n                            self.validator.errors.push("Please make sure you\'ve entered your association.");\n                            }\n                        }\n                    }\n                \n                }\n\n            // Privacy Policy\n            if (!data.privacyAgreementAgreed && baseApplicationService.getCuId() == \'BS-0001\') {\n                self.validator.errors.push("To continue you must agree to our privacy policy.");\n            }\n\n\n            // Api loan id\n            if(!data.SavingsApplicationID) {\n                self.validator.errors.push("Sorry something went wrong, please refresh and try again. (a)");\n            } else {\n                if (isNaN(data.SavingsApplicationID)) {\n                    self.validator.errors.push("Sorry something went wrong, please refresh and try again. (b)");\n                }\n            }\n\n            if(!data.savingsApplicationId) {\n                self.validator.errors.push("Sorry something went wrong, please refresh and try again. (c)");\n            } else {\n                if (isNaN(data.savingsApplicationId)) {\n                    self.validator.errors.push("Sorry something went wrong, please refresh and try again. (d)");\n                }\n            }\n\n            // They have a cu id?\n            if(!data.cuId) {\n                self.validator.errors.push("Sorry something went wrong, please refresh and try again. (d)");\n            }\n\n            // They have a product id\n            if(!data.cuId) {\n                self.validator.errors.push("Sorry something went wrong, please refresh and try again. (e)");\n            }\n\n            // Make sure they have a nationality\n            if (!data.nationality) {\n                self.validator.errors.push("Please make sure you\'ve picked your nationality.");\n            } else {\n\n                // If they\'re not british, we need all their details\n                if (data.nationality !== \'British\') {\n\n                    if (!data.passportIdNumber) {\n                        self.validator.errors.push("Please make sure you\'ve entered your passport number.");\n                    }\n\n                    // We also make sure their passport has not expired\n                    if (!data.passportValidUntil) {\n                        self.validator.errors.push("Please make sure you\'ve entered your passport expiry.");\n                    } else {\n                        var parts = data.passportValidUntil.split(\'/\');\n\n                        if (parts.length !== 3) {\n                            self.validator.errors.push("Please make sure you\'ve entered your passport expiry correctly.");\n                        } else {\n                            var now = Date.now();\n                            var expires = Date.parse(((parts[2]) + "-" + (parts[1]) + "-" + (parts[0])));\n                            if (now > expires) {\n                                self.validator.errors.push("Sorry your passport has expired, we can only acccept non-British applicants with valid passports.");\n                            }\n                        }\n                    }\n\n                    // And they stated their issuing authority\n                    if (!data.passportIssuingAuthority) {\n                        self.validator.errors.push("Please make sure you\'ve entered your passports issuing authority.");\n                    }\n                }\n            }\n\n            if (!data.securityQuestion) {\n                self.validator.errors.push("Please make sure you\'ve picked a security question.");\n            }\n\n            if (!data.securityQuestionAnswer) {\n                self.validator.errors.push("Please make sure you\'ve entered your security answer.");\n            } else {\n                if (data.securityQuestionAnswer.length > 50) {\n                    self.validator.errors.push("Please make sure your security answer is less than 50 characters.");\n                }\n            }\n\n            if (data.state !== \'IN_PROGRESS\') {\n                self.validator.errors.push("Sorry we\'ve already processed your application. If you have not received your result please phone us.");\n            }\n            \n           if(!data.cuEligibility){\n                if(self.getCuId() != \'BS-0001\'){\n                    self.validator.errors.push("Please confirm your Eligibility for membership to the Credit Union.");\n                } else {\n                    self.validator.errors.push("Please confirm your consent to allow us to verify your ID and Eligibility.");\n                }     \n            }\n\n            if (self.validator.errors.length == 0) {\n                self.validator.success = true;\n            }\n\n            return self.validator;\n        }\n    };\n}]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,');
},function(module,exports,__webpack_require__){eval("__webpack_require__(0);\n__webpack_require__(1);\n\n__webpack_require__(3);\n__webpack_require__(4);\n__webpack_require__(2);\n\n__webpack_require__(6);\n__webpack_require__(7);\n__webpack_require__(5);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy90aGVtZS1hc3NldHMvanMvYXBwbGljYXRpb24tZm9ybS5qcz80NWRhIl0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vX2FwcGxpY2F0aW9ucy9fYmFzZS1mYWN0b3J5Jyk7XG5yZXF1aXJlKCcuL19hcHBsaWNhdGlvbnMvX2Jhc2Utc2VydmljZScpO1xuXG5yZXF1aXJlKCcuL19hcHBsaWNhdGlvbnMvX2xvYW4tZmFjdG9yeScpO1xucmVxdWlyZSgnLi9fYXBwbGljYXRpb25zL19sb2FuLXNlcnZpY2UnKTtcbnJlcXVpcmUoJy4vX2FwcGxpY2F0aW9ucy9fbG9hbi1jb250cm9sbGVyJyk7XG5cbnJlcXVpcmUoJy4vX2FwcGxpY2F0aW9ucy9fc2F2aW5ncy1mYWN0b3J5Jyk7XG5yZXF1aXJlKCcuL19hcHBsaWNhdGlvbnMvX3NhdmluZ3Mtc2VydmljZScpO1xucmVxdWlyZSgnLi9fYXBwbGljYXRpb25zL19zYXZpbmdzLWNvbnRyb2xsZXInKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB0aGVtZS1hc3NldHMvanMvYXBwbGljYXRpb24tZm9ybS5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9")}]);